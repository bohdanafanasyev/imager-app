
/*  Hero header */
/* ================================================== */
.card-3d-layout {
  pointer-events: none;
  position: relative;
  width: 100%;
  height: 100%;
  display: grid;
  place-self: center;
  place-items: end center;
  padding: var(--nav-h) 0 15% 0;
  perspective: 2500px;
}
@media only screen and (min-width: 22.5rem) {
  .card-3d-layout {
    padding-bottom: 25%;
  }
}
@media only screen and (min-width: 35rem) {
  .card-3d-layout {
    place-items: end start;
    padding-left: var(--moat);
    padding-right: 0;
    padding-bottom: 10%;
  }
}
@media only screen and (min-width: 64rem) {
  .card-3d-layout {
    padding-left: 5rem;
    max-width: 64rem;
  }
}
@media only screen and (min-width: 90rem) {
  .card-3d-layout {
    padding-left: 0;
    padding-bottom: 5%;
    max-width: 1200px;
  }
}
@media only screen and (min-width: 1700px) {
  .card-3d-layout {
    max-width: 90rem;
  }
}
@media only screen and (min-width: 2500px) {
  .card-3d-layout {
    perspective: 3000px;
    max-width: 2000px;
  }
}

.card-3d {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  --_card-radius: var(--card-radius, 1.5rem);
  z-index: 7;
  position: relative;
  height: fit-content;
  display: grid;
  gap: var(--_space);
  padding: var(--_space);
  overflow: hidden;
  pointer-events: auto;
  border-radius: var(--_card-radius);
  pointer-events: none;
  --space: calc(var(--sm) * 1.1);
  width: min(95%, 340px);
  border-radius: calc(var(--lg) * 1.15);
  box-shadow: var(--sha-lg);
  padding: var(--space);
  backface-visibility: hidden;
  will-change: transform;
  transition: transform 400ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  transform: perspective(1500px) rotateY(30deg) rotateX(15deg) rotateZ(-4deg) translateX(10px) translateY(0px);
}
@media only screen and (min-width: 22.5rem) {
  .card-3d {
    --space: var(--md);
    width: min(95%, 380px);
    transform: perspective(1800px) rotateY(30deg) rotateX(20deg) rotateZ(-6deg) translateX(15px) translateY(0px);
  }
}
@media only screen and (min-width: 35rem) {
  .card-3d {
    width: 390px;
    transform: perspective(2500px) rotateY(25deg) rotateX(20deg) rotateZ(-10deg) translateX(35px) translateY(-10%);
  }
}
@media only screen and (min-width: 48rem) {
  .card-3d {
    width: 420px;
    --space: var(--md);
  }
}
@media only screen and (min-width: 64rem) {
  .card-3d {
    width: 450px;
    --space: var(--md);
    border-radius: var(--lg);
  }
}
@media (hover: hover) {
  .card-3d {
    pointer-events: auto;
  }
  .card-3d:hover {
    transform: perspective(1000px) rotateY(0deg) rotateX(0deg) rotateZ(0deg) translateX(0px) translateY(0%);
  }
}

.card-3d-title {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.02em;
  text-shadow: var(--text-sha-2xl);
  line-height: 1.15;
  color: var(--text-strong);
  font-size: var(--text-xl);
}
@media only screen and (min-width: 22.5rem) {
  .card-3d-title {
    font-size: calc(var(--text-2xl) * 0.95);
  }
}
@media only screen and (min-width: 48rem) {
  .card-3d-title {
    font-size: var(--text-2xl);
  }
}

.card-3d-text {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-xs);
  letter-spacing: 0.02em;
  text-shadow: var(--text-sha-2xs);
}
@media only screen and (min-width: 22.5rem) {
  .card-3d-text {
    font-size: var(--text-md);
  }
}
@media only screen and (min-width: 35rem) {
  .card-3d-text {
    font-size: var(--text-md);
  }
}
@media only screen and (min-width: 64rem) {
  .card-3d-text {
    font-size: calc(var(--text-md) * 1.1);
  }
}
