@charset "UTF-8";
/* ================================================== */
/* Reset */
/* ================================================== */
/* Use box-sizing model */
*, *::before, *::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* Kill margin with fire */
* {
  margin: 0;
}

/* Improve text rendering */
body {
  -webkit-font-smoothing: antialiased;
}

/* Remove list styles */
ol,
ul {
  list-style: none;
}

/* Prevent text overflow */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Remove padding */
a,
ul,
ol,
li,
dl,
dt,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hgroup,
p,
blockquote,
figure,
form,
fieldset,
input,
legend,
pre,
abbr,
button,
body,
textarea,
select {
  padding: 0;
}

/* Reset interactive elements */
a,
input,
button,
textarea,
fieldset,
select {
  font: inherit;
  margin: 0;
  padding: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
  padding-block-start: 0;
  padding-inline-start: 0;
  padding-inline-end: 0;
  padding-block-end: 0;
  background-color: transparent;
  border: 0;
  border-style: none;
  text-decoration: none;
  appearance: none;
  cursor: pointer;
  pointer-events: auto;
}

/* debug */
/* Utils */
/* ================================================== */
/* Grid | Flex-box | Gap */
/* ================================================== */
/* Mixins */
/* ================================================== */
/* Space */
/* ================================================== */
/* Mobile 1st breakpoints */
/* ================================================== */
/* Breakpoints MAP ‚ú® Config these values */
/* ================================================== */
/* Breakpoint mixin */
/* ================================================== */
/* Breakpoint variables */
/* ================================================== */
/* ================================================== */
/* How to use */
/* ================================================== */
/* add this ‚¨áÔ∏é to the very top of the document */
/* üí† example */
/* ================================================== */
/* Container queries */
/* ================================================== */
/* Background container query */
/* ================================================== */
/* Used by _card, _accordion, and _glass */
.bg-container {
  container: bg/inline-size;
  width: 100%;
}

/* ================================================== */
/* z-index */
/* ================================================== */
/* ================================================== */
/* ================================================== */
/* Dynamic T-shirt sizes ‚ú® Config these values */
/* ================================================== */
:root {
  /* 4px */
  --5xs: 0.25rem;
  /* 8px */
  --4xs: 0.5rem;
  /* 12px */
  --3xs: 0.75rem;
  /* 14px */
  --2xs: 0.875rem;
  /* 16px */
  --xs: 1rem;
  /* 16px ‚Üí 24px */
  --sm: clamp(1rem, calc(2vw + 0.5rem), 1.5rem);
  /* 20px ‚Üí 32px */
  --md: clamp(1.25rem, calc(2vw + 0.85rem), 2rem);
  /* 24px ‚Üí 40px */
  --lg: clamp(1.5rem, calc(2vw + 1rem), 2.5rem);
  /* 28px ‚Üí 48px */
  --xl: clamp(1.75rem, calc(2vw + 1.4rem), 3rem);
  /* 32px ‚Üí 56px */
  --2xl: clamp(2rem, calc(2vw + 1.6rem), 3.5rem);
  /* 48px ‚Üí 72px */
  --3xl: clamp(3rem, calc(2vw + 2.6rem), 4.5rem);
  /* 64px ‚Üí 96px */
  --4xl: clamp(4rem, calc(2vw + 3.6rem), 6rem);
  /* 80px ‚Üí 120px */
  --5xl: clamp(5rem, calc(2vw + 4.6rem), 7.5rem);
}

/* T-shirt Size MAP */
/* ================================================== */
/* Update if you add/remove/edit names of fluid sizes above */
/* ================================================== */
/* Responsive spacing/sizing ‚ú® Config these values */
/* ================================================== */
html {
  /* Left-right moat */
  --moat: 1rem;
  /* Container query value for padding / margin / gap */
  --space-q-sm: 7cqw;
  --space-q-md: 7cqw;
  --space-q-lg: 11cqw;
  /* Ui height */
  --ui-h-xs: 1.625rem; /* 26px */
  --ui-h-sm: 2rem; /* 32px */
  --ui-h-md: 2.25rem; /* 36px */
  --ui-h-lg: 2.75rem; /* 44px */
  --ui-h-xl: 3.25rem; /* 52px */
}
@media only screen and (min-width: 22.5rem) {
  html {
    --ui-h-xs: 1.5rem; /* 28px */
    --ui-h-sm: 2.125rem; /* 34px */
    --ui-h-md: 2.375rem; /* 38px */
    --ui-h-lg: 2.875rem; /* 46px */
    --ui-h-xl: 3.375rem; /* 54px */
  }
}
@media only screen and (min-width: 35rem) {
  html {
    --moat: 2rem;
    --space-q-sm: 7cqw;
    --space-q-md: 6cqw;
    --space-q-lg: min(10cqw, 5rem);
  }
}
@media only screen and (min-width: 48rem) {
  html {
    --moat: 3rem;
  }
}
@media only screen and (min-width: 64rem) {
  html {
    --ui-h-sm: 2.25rem; /* 36px */
    --ui-h-md: 2.625rem; /* 42px */
    --ui-h-lg: 2.75rem; /* 44px */
    --ui-h-xl: 3.5rem; /* 56px */
  }
}
@media only screen and (min-width: 90rem) {
  html {
    --moat: 5rem;
  }
}

/* ================================================== */
/* Moats */
/* ================================================== */
/* ‚ÑπÔ∏è Moats are parent classes that: */
/* ‚Ä¢ give their child/children a left-right gutter that adapts to viewport width */
/* ‚Ä¢ take up 100% width and center their children using grid */
/* ‚Ä¢ add a moat starting from the breakpoint that matches their suffix */
/* This is useful for things like text with a background that should span edge-to-edge on mobile then become a card at larger screen sizes. */
/* üí† example */
/* Adds a moat at every screen size */
.moat-all {
  display: grid;
  place-items: center;
  padding: 0 var(--moat);
}

/* Adds a moat at xs breakpoint and bigger */
.moat-xs {
  display: grid;
  place-items: center;
  padding: 0;
}
@media only screen and (min-width: 22.5rem) {
  .moat-xs {
    padding: 0 var(--moat);
  }
}

.moat-sm {
  display: grid;
  place-items: center;
  padding: 0;
}
@media only screen and (min-width: 35rem) {
  .moat-sm {
    padding: 0 var(--moat);
  }
}

.moat-md {
  display: grid;
  place-items: center;
  padding: 0;
}
@media only screen and (min-width: 48rem) {
  .moat-md {
    padding: 0 var(--moat);
  }
}

.moat-lg {
  display: grid;
  place-items: center;
  padding: 0;
}
@media only screen and (min-width: 64rem) {
  .moat-lg {
    padding: 0 var(--moat);
  }
}

.moat-xl {
  display: grid;
  place-items: center;
  padding: 0;
}
@media only screen and (min-width: 90rem) {
  .moat-xl {
    padding: 0 var(--moat);
  }
}

/* ================================================== */
/* Width */
/* ================================================== */
/* ‚ÑπÔ∏è .w- classes limit the width of elements to their suffix breakpoint */
/* e.g. .w-md takes up 100% width at $bp-sm & won't get bigger than the value of $bp-md */
.w-xs {
  width: min(100%, 22.5rem);
}

.w-sm {
  width: min(100%, 35rem);
}

.w-md {
  width: min(100%, 48rem);
}

.w-lg {
  width: min(100%, 64rem);
}

.w-xl {
  width: min(100%, 90rem);
}

/* ================================================== */
/* Large spacing */
/* ================================================== */
.page-gap {
  z-index: 1;
  display: grid;
  gap: 8rem;
}
@media only screen and (min-width: 22.5rem) {
  .page-gap {
    gap: 10rem;
  }
}
@media only screen and (min-width: 35rem) {
  .page-gap {
    gap: 12rem;
  }
}
@media only screen and (min-width: 48rem) {
  .page-gap {
    gap: 14rem;
  }
}
@media only screen and (min-width: 64rem) {
  .page-gap {
    gap: 16rem;
  }
}
@media only screen and (min-width: 90rem) {
  .page-gap {
    gap: 18rem;
  }
}

.section-gap {
  z-index: 2;
  display: grid;
  gap: 5rem;
}
@media only screen and (min-width: 22.5rem) {
  .section-gap {
    gap: 8rem;
  }
}
@media only screen and (min-width: 35rem) {
  .section-gap {
    gap: 9rem;
  }
}
@media only screen and (min-width: 48rem) {
  .section-gap {
    gap: 10rem;
  }
}
@media only screen and (min-width: 64rem) {
  .section-gap {
    gap: 11rem;
  }
}
@media only screen and (min-width: 90rem) {
  .section-gap {
    gap: 12rem;
  }
}

/* Edge-to-edge classes */
/* ================================================== */
.e2e {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  width: calc(100% + var(--_space) * 2);
  display: grid;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);
}
.e2e.p-0 {
  padding: 0;
}

.e2e-no-t {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  width: calc(100% + var(--_space) * 2);
  display: grid;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);
  margin-top: var(--neg-space);
}
.e2e-no-t.p-0 {
  padding: 0;
}

.e2e-no-b {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  width: calc(100% + var(--_space) * 2);
  display: grid;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);
  margin-bottom: var(--neg-space);
}
.e2e-no-b.p-0 {
  padding: 0;
}

.e2e-no-y {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  width: calc(100% + var(--_space) * 2);
  display: grid;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);
  margin-top: var(--neg-space);
  margin-bottom: var(--neg-space);
}
.e2e-no-y.p-0 {
  padding: 0;
}

.e2e-inset {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  width: calc(100% + var(--_space) * 2);
  display: grid;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);
  margin-left: calc(var(--neg-space) + 1px);
  margin-right: var(--neg-space);
  background-color: var(--inset-bg-deep);
  box-shadow: var(--inset-flat-md);
}
.e2e-inset.p-0 {
  padding: 0;
}

/* Remove margin-left offset at 100vw or bigger */
/* the -16px prevents issues with scrollbars cutting into 100vw */
@container card (width >= calc(100vw - 16px)) {
  .e2e-inset {
    margin-left: var(--neg-space);
  }
}
/* ================================================== */
/* Generic class generating mixin */
/* ================================================== */
/* Size modifier mixin */
/* ================================================== */
/* Generates classes using the $sizes map from _space.scss */
/* 2 property size modifier mixin */
/* ================================================== */
/* HSL lightness values */
/* ================================================== */
/* Color lightness generating mixin */
/* ================================================== */
/* Color generating mixin */
/* ================================================== */
/* ================================================== */
/* ================================================== */
/* Gap classes */
/* ================================================== */
.gap-5xs {
  gap: var(--5xs);
}
.gap-4xs {
  gap: var(--4xs);
}
.gap-3xs {
  gap: var(--3xs);
}
.gap-2xs {
  gap: var(--2xs);
}
.gap-xs {
  gap: var(--xs);
}
.gap-sm {
  gap: var(--sm);
}
.gap-md {
  gap: var(--md);
}
.gap-lg {
  gap: var(--lg);
}
.gap-xl {
  gap: var(--xl);
}
.gap-2xl {
  gap: var(--2xl);
}
.gap-3xl {
  gap: var(--3xl);
}
.gap-4xl {
  gap: var(--4xl);
}
.gap-5xl {
  gap: var(--5xl);
}

/* ================================================== */
/* flex-box */
/* ================================================== */
.flex {
  display: flex;
}

/* flex center x & y */
.flex-c {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-column-c {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

/* flex-direction: */
/* ================================================== */
.flex-column {
  display: flex;
  flex-direction: column;
}

.flex-column-rev {
  display: flex;
  flex-direction: column-reverse;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-row-rev {
  display: flex;
  flex-direction: row-reverse;
}

/* flex-wrap: */
/* ================================================== */
.flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

.flex-wrap-rev {
  display: flex;
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  display: flex;
  flex-wrap: nowrap;
}

/* justify-content: */
/* ================================================== */
.justify-l {
  display: flex;
  justify-content: flex-start;
}

.justify-r {
  display: flex;
  justify-content: flex-end;
}

.justify-c {
  display: flex;
  justify-content: center;
}

.justify-sb {
  display: flex;
  justify-content: space-between;
}

.justify-sa {
  display: flex;
  justify-content: space-around;
}

.justify-se {
  display: flex;
  justify-content: space-evenly;
}

/* align-items: */
/* ================================================== */
.align-items-t {
  display: flex;
  align-items: flex-start;
}

.align-items-c {
  display: flex;
  align-items: center;
}

.align-items-b {
  display: flex;
  align-items: flex-end;
}

.align-items-s {
  display: flex;
  align-items: stretch;
}

/* For multi-line flex-wrap */
/* ================================================== */
.align-content-c {
  display: flex;
  align-content: center;
}

.align-content-sb {
  display: flex;
  align-content: space-between;
}

.align-content-sa {
  display: flex;
  align-content: space-around;
}

.align-content-se {
  display: flex;
  align-content: space-evenly;
}

/* For flex items */
/* ================================================== */
.align-self-t {
  align-self: flex-start;
}

.align-self-c {
  align-self: center;
}

.align-self-b {
  align-self: flex-end;
}

.align-self-s {
  align-self: stretch;
}

.flex-100 {
  display: flex;
  flex: 0 1 100px;
}

/* ================================================== */
/* Grid */
/* ================================================== */
.grid {
  display: grid;
}

/* grid center x & y */
.grid-c {
  display: grid;
  place-items: center;
}

.grid-content-c {
  display: grid;
  place-content: center;
}

.grid-12 {
  display: grid;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

/* auto-fill */
/* Fills the row with as many columns as it can fit. So it creates implicit columns. */
.grid-auto-fill {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}

/* auto-fit */
/* Fits the columns it has into the space by expanding them. */
.grid-auto-fit {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

.grid-auto-fit-300 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

/* Properties for Grid Items */
/* ================================================== */
.place-self-c {
  place-self: center;
}

.place-self-s {
  place-self: stretch;
}

/* ================================================== */
/* Layout helpers */
/* ================================================== */
/* width */
/* ================================================== */
.w-100 {
  width: 100%;
}

.w-fit {
  width: fit-content;
}

.w-fit-max {
  width: max-content;
}

.w-fit-min {
  width: min-content;
}

/* Display */
/* ================================================== */
.block {
  display: block;
}

.inline {
  display: inline;
}

.inlineblock {
  display: inline-block;
}

.hidden {
  display: none;
}

.visually-hidden {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  width: 1px;
  height: 1px;
  overflow: hidden;
  padding: 0;
  border: 0;
  white-space: nowrap;
}

/* Aspect-ratio */
/* ================================================== */
.ratio-1 {
  aspect-ratio: 1;
}

.ratio-4-3 {
  aspect-ratio: 4/3;
}

.ratio-16-9 {
  aspect-ratio: 16/9;
}

/* Sidescroll */
/* ================================================== */
.sidescroll-bin {
  width: 100%;
  display: flex;
  flex-wrap: nowrap;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
}
.sidescroll-bin::-webkit-scrollbar {
  display: none;
}
.sidescroll-bin:hover {
  overflow-x: scroll;
}

.sidescroll {
  flex: 0 0 auto;
}

/* Other */
/* ================================================== */
.no-pointer {
  pointer-events: none;
}

.overflow-hidden {
  overflow: hidden;
}

/* ================================================== */
/* Border Radius */
/* ================================================== */
/* Conditional border-radius */
/* ================================================== */
/* Nested border radius */
/* ================================================== */
/* Top or bottom radius only */
/* ================================================== */
.top-radius {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  overflow: hidden;
}

.bottom-radius {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
  overflow: hidden;
}

/* Border radius classes */
/* ================================================== */
/* Generates classes using the $sizes map from _space.scss */
.radius-5xs {
  border-radius: var(--5xs);
}
.radius-4xs {
  border-radius: var(--4xs);
}
.radius-3xs {
  border-radius: var(--3xs);
}
.radius-2xs {
  border-radius: var(--2xs);
}
.radius-xs {
  border-radius: var(--xs);
}
.radius-sm {
  border-radius: var(--sm);
}
.radius-md {
  border-radius: var(--md);
}
.radius-lg {
  border-radius: var(--lg);
}
.radius-xl {
  border-radius: var(--xl);
}
.radius-2xl {
  border-radius: var(--2xl);
}
.radius-3xl {
  border-radius: var(--3xl);
}
.radius-4xl {
  border-radius: var(--4xl);
}
.radius-5xl {
  border-radius: var(--5xl);
}

/* Radius bin */
/* ================================================== */
/* This parent calss helps remove janky rendering artifacts that occur in some browsers when inset box-shadow + border-radius are used on the same element.
The solution though not perfect is to add a parent wrapper that sets the border-radius while the child sets the inset box-shadow */
.radius-bin-5xs {
  border-radius: var(--5xs);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-4xs {
  border-radius: var(--4xs);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-3xs {
  border-radius: var(--3xs);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-2xs {
  border-radius: var(--2xs);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-xs {
  border-radius: var(--xs);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-sm {
  border-radius: var(--sm);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-md {
  border-radius: var(--md);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-lg {
  border-radius: var(--lg);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-xl {
  border-radius: var(--xl);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-2xl {
  border-radius: var(--2xl);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-3xl {
  border-radius: var(--3xl);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-4xl {
  border-radius: var(--4xl);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}
.radius-bin-5xl {
  border-radius: var(--5xl);
  width: 100%;
  height: fit-content;
  overflow: hidden;
}

/* ================================================== */
/* Text util */
/* ================================================== */
/* Colors */
/* ================================================== */
/* ================================================== */
/* Color tokens */
/* ================================================== */
:root {
  /* Hue and saturation values ‚ú® Config these values */
  /* ================================================== */
  --primary-h: 130;
  --primary-s: 50%;
  --neutral-h: 205;
  --neutral-s: 20%;
  /* Primary */
  /* ================================================== */
  --primary-98: var(--primary-h) var(--primary-s) 98%;
  --primary-95: var(--primary-h) var(--primary-s) 95%;
  --primary-90: var(--primary-h) var(--primary-s) 90%;
  --primary-85: var(--primary-h) var(--primary-s) 85%;
  --primary-80: var(--primary-h) var(--primary-s) 80%;
  --primary-70: var(--primary-h) var(--primary-s) 70%;
  --primary-60: var(--primary-h) var(--primary-s) 60%;
  --primary-50: var(--primary-h) var(--primary-s) 50%;
  --primary-40: var(--primary-h) var(--primary-s) 40%;
  --primary-30: var(--primary-h) var(--primary-s) 30%;
  --primary-20: var(--primary-h) var(--primary-s) 20%;
  --primary-10: var(--primary-h) var(--primary-s) 10%;
  --primary-5: var(--primary-h) var(--primary-s) 5%;
  /* Neutral */
  /* ================================================== */
  --neutral-98: var(--neutral-h) var(--neutral-s) 98%;
  --neutral-95: var(--neutral-h) var(--neutral-s) 95%;
  --neutral-90: var(--neutral-h) var(--neutral-s) 90%;
  --neutral-85: var(--neutral-h) var(--neutral-s) 85%;
  --neutral-80: var(--neutral-h) var(--neutral-s) 80%;
  --neutral-70: var(--neutral-h) var(--neutral-s) 70%;
  --neutral-60: var(--neutral-h) var(--neutral-s) 60%;
  --neutral-50: var(--neutral-h) var(--neutral-s) 50%;
  --neutral-40: var(--neutral-h) var(--neutral-s) 40%;
  --neutral-30: var(--neutral-h) var(--neutral-s) 30%;
  --neutral-20: var(--neutral-h) var(--neutral-s) 20%;
  --neutral-15: var(--neutral-h) var(--neutral-s) 15%;
  --neutral-10: var(--neutral-h) var(--neutral-s) 10%;
  --neutral-5: var(--neutral-h) var(--neutral-s) 5%;
}

/* ================================================== */
/* Color theme */
/* ================================================== */
html {
  /* Solid colors */
  /* ================================================== */
  --color-white: hsl(var(--neutral-98) / 1);
  --color-2xlight: hsl(var(--neutral-90) / 1);
  --color-xlight: hsl(var(--neutral-80) / 1);
  --color-light: hsl(var(--neutral-70) / 1);
  --color-gray: hsl(var(--neutral-50) / 1);
  --color-dark: hsl(var(--neutral-40) / 1);
  --color-xdark: hsl(var(--neutral-30) / 1);
  --color-2xdark: hsl(var(--neutral-20) / 1);
  --color-black: hsl(var(--neutral-5) / 1);
  /* Translucent tints */
  /* ================================================== */
  --tint-3xlight: hsl(var(--neutral-95) / 0.4);
  --tint-2xlight: hsl(var(--neutral-95) / 0.3);
  --tint-xlight: hsl(var(--neutral-95) / 0.2);
  --tint-light: hsl(var(--neutral-95) / 0.1);
  --tint-clear: hsl(var(--neutral-10) / 0.01);
  --tint-dark: hsl(var(--neutral-10) / 0.1);
  --tint-xdark: hsl(var(--neutral-10) / 0.25);
  --tint-2xdark: hsl(var(--neutral-10) / 0.4);
  --tint-3xdark: hsl(var(--neutral-10) / 0.6);
  /* Text colors */
  /* ================================================== */
  --text-2xstrong: hsl(var(--neutral-98) / 1);
  --text-xstrong: hsl(var(--neutral-95) / 1);
  --text-strong: hsl(var(--neutral-90) / 1);
  --text-base: hsl(var(--neutral-85) / 1);
  --text-mild: hsl(var(--neutral-80) / 1);
  --text-xmild: hsl(var(--neutral-60) / 1);
  --text-2xmild: hsl(var(--neutral-50) / 1);
  /* Inset bg colors */
  /* ================================================== */
  --inset-bg-reg: hsl(var(--neutral-10) / 0.15);
  --inset-bg-deep: hsl(var(--neutral-10) / 0.25);
  --inset-bg-xdeep: hsl(var(--neutral-10) / 0.35);
  /* Box-shadows | Text-shadows | Drop-shadows */
  /* ================================================== */
  --shadow: var(--neutral-10);
  --highlight: var(--neutral-90);
}

/* Solid colors MAP */
/* ================================================== */
/* Generate color classes */
.color-white {
  background-color: var(--color-white);
}
.color-2xlight {
  background-color: var(--color-2xlight);
}
.color-xlight {
  background-color: var(--color-xlight);
}
.color-light {
  background-color: var(--color-light);
}
.color-gray {
  background-color: var(--color-gray);
}
.color-dark {
  background-color: var(--color-dark);
}
.color-xdark {
  background-color: var(--color-xdark);
}
.color-2xdark {
  background-color: var(--color-2xdark);
}
.color-black {
  background-color: var(--color-black);
}

/* Tints MAP */
/* ================================================== */
/* Generate tint classes */
.tint-3xlight {
  background-color: var(--tint-3xlight);
}
.tint-2xlight {
  background-color: var(--tint-2xlight);
}
.tint-xlight {
  background-color: var(--tint-xlight);
}
.tint-light {
  background-color: var(--tint-light);
}
.tint-clear {
  background-color: var(--tint-clear);
}
.tint-dark {
  background-color: var(--tint-dark);
}
.tint-xdark {
  background-color: var(--tint-xdark);
}
.tint-2xdark {
  background-color: var(--tint-2xdark);
}
.tint-3xdark {
  background-color: var(--tint-3xdark);
}

/* Text colors MAP */
/* ================================================== */
/* Generate text color classes */
.text-2xstrong {
  color: var(--text-2xstrong);
}
.text-xstrong {
  color: var(--text-xstrong);
}
.text-strong {
  color: var(--text-strong);
}
.text-base {
  color: var(--text-base);
}
.text-mild {
  color: var(--text-mild);
}
.text-xmild {
  color: var(--text-xmild);
}
.text-2xmild {
  color: var(--text-2xmild);
}
.text-white {
  color: var(--color-white);
}
.text-2xlight {
  color: var(--color-2xlight);
}
.text-xlight {
  color: var(--color-xlight);
}
.text-light {
  color: var(--color-light);
}
.text-gray {
  color: var(--color-gray);
}
.text-dark {
  color: var(--color-dark);
}
.text-xdark {
  color: var(--color-xdark);
}
.text-2xdark {
  color: var(--color-2xdark);
}
.text-black {
  color: var(--color-black);
}

/* ================================================== */
/* Text */
/* ================================================== */
/* font-family: ‚ú® Config these values */
/* ================================================== */
/* ‚ÑπÔ∏è Link your fonts in <head> of index.html */
/* letter-spacing: ‚ú® Config these values */
/* ================================================== */
/* line-height: ‚ú® Config these values */
/* ================================================== */
/* font-weight: ‚ú® Config these values */
/* ================================================== */
/* font-size: ‚ú® Config these values */
/* ================================================== */
/* https://modern-fluid-typography.vercel.app/ */
:root {
  --text-2xs: clamp(0.75rem, 4vw - 1rem, 0.85rem);
  --text-xs: clamp(0.875rem, 4vw - 1rem, 0.9rem);
  --text-sm: clamp(1rem, 0.13vw + 1rem, 1rem);
  --text-md: clamp(1.125rem, 0.5vw + 1rem, 1.25rem);
  --text-lg: clamp(1.375rem, 1.3vw + 1rem, 1.75rem);
  --text-xl: clamp(1.5rem, 1.7vw + 1rem, 2.25rem);
  --text-2xl: clamp(2rem, calc(2vw + 1.5rem), 2.75rem);
  --text-3xl: clamp(2.6rem, 3.8vw + 1rem, 3.75rem);
}

/* Text size MAP */
/* ================================================== */
/* Update if you add/remove/edit names of fluid font-sizes above */
/* Generate text size classes */
.text-2xs {
  font-size: var(--text-2xs);
}
.text-xs {
  font-size: var(--text-xs);
}
.text-sm {
  font-size: var(--text-sm);
}
.text-md {
  font-size: var(--text-md);
}
.text-lg {
  font-size: var(--text-lg);
}
.text-xl {
  font-size: var(--text-xl);
}
.text-2xl {
  font-size: var(--text-2xl);
}
.text-3xl {
  font-size: var(--text-3xl);
}

/* ================================================== */
/* Text styles */
/* ================================================== */
/* Body text */
/* ================================================== */
body,
p,
input,
textarea {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  line-height: calc(0.125em + 2.5ex + 0.125em);
  color: var(--text-base);
}

.text-max-w {
  max-width: 70ch;
}

/* Titles */
/* ================================================== */
.title-thick {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
}

.title-md {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
}

.title-thin {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 200;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
}

/* Text styles */
/* ================================================== */
.title-1 {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  font-size: var(--text-3xl);
  letter-spacing: -0.005em;
  line-height: calc(0.125em + 2.25ex + 0.125em);
  color: var(--text-strong);
  text-shadow: var(--text-sha-2xl);
}

.title-2 {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  font-size: var(--text-xl);
  letter-spacing: 0.02em;
  text-align: start;
  color: var(--text-strong);
  text-shadow: var(--text-sha-2xl);
}

.title-3 {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 200;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  font-size: var(--text-2xl);
  text-align: center;
  text-shadow: var(--text-sha-lg);
}

.title-4 {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  text-align: start;
  letter-spacing: 0.02em;
  font-size: var(--text-lg);
  color: var(--text-strong);
  text-shadow: var(--text-sha-xl);
}

.title-md {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  text-align: start;
  letter-spacing: 0.01em;
  font-size: var(--text-md);
}

.subtitle {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  text-align: center;
  font-size: var(--text-sm);
  letter-spacing: -0.005em;
  line-height: calc(0.125em + 2.25ex + 0.125em);
  color: var(--text-mild);
  text-shadow: var(--text-sha-3xs);
}

.eyebrow {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-size: var(--text-2xs);
  letter-spacing: 0.04em;
  line-height: calc(0.125em + 2.25ex + 0.125em);
  color: var(--text-mild);
  text-transform: uppercase;
  text-shadow: var(--text-sha-3xs);
}

/* Labels */
/* ================================================== */
.label-xs {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 500;
  letter-spacing: 0.01em;
  font-size: var(--text-xs);
  line-height: calc(0.125em + 2.25ex + 0.125em);
  text-shadow: var(--text-sha-xs);
}

.label-sm {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 500;
  letter-spacing: 0.01em;
  font-size: var(--text-sm);
  line-height: calc(0.125em + 2.25ex + 0.125em);
  text-shadow: var(--text-sha-sm);
}

.label-md {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 500;
  letter-spacing: 0.01em;
  font-size: var(--text-md);
  line-height: calc(0.125em + 2.25ex + 0.125em);
  text-shadow: var(--text-sha-md);
}

/* ================================================== */
/* text-align: */
/* ================================================== */
.text-center {
  text-align: center;
}

.text-left {
  text-align: start;
}

.text-right {
  text-align: end;
}

.text-justify {
  text-align: justify;
}

/* text-transform: */
/* ================================================== */
.text-cap {
  text-transform: capitalize;
}

.text-allcap {
  text-transform: uppercase;
}

.text-lower {
  text-transform: lowercase;
}

.text-bold {
  font-weight: 400;
}

.text-ital {
  font-style: italic;
}

.text-line-through {
  text-decoration: line-through;
}

.text-underline {
  text-decoration: underline;
}

.first-line-bold:first-line {
  font-weight: 400;
}

.ellipsis {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.break-word {
  overflow-wrap: break-word;
  min-width: 0;
}

.no-word-break {
  word-break: keep-all;
}

/* Bullet points */
/* ================================================== */
.dot::before {
  padding-right: 0.25em;
  content: "‚Ä¢";
}

.check::before {
  padding-right: 0.25em;
  content: "‚òê";
}

.arrow::before {
  padding-right: 0.25em;
  content: "‚ûü";
}

/* Design */
/* ================================================== */
/* Interactions */
/* ================================================== */
/* Speeds variables ‚ú® Config these values */
/* ================================================== */
/* cubic-bezier */
/* ================================================== */
/* :focus-visible */
/* ================================================== */
:focus-visible {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}

:focus {
  outline: 1px solid transparent;
}

::-moz-focus-inner {
  border: 0;
  padding: 0;
  padding-block: 0;
  padding-inline: 0;
}

/* Fade animations */
/* ================================================== */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
/* Spotlight cursor effect */
/* ================================================== */
/* 1. Add `js-spotlightBin` class to parent */
/* 2. Add `spotlight` or `mini-spotlight` class to child element */
/* If it dosen't work... */
/* 1. Make sure the spotlight script is added at the end of <body> */
/* 2. Make sure `findSpotlights()` is called in `loadContent.js` */
/* üí† example */
@media (hover: hover) {
  .spotlight {
    position: relative;
  }
  .spotlight:hover {
    --active: 1;
  }
  .spotlight::before {
    content: "";
    position: absolute;
    inset: 1px;
    pointer-events: none;
    border-radius: inherit;
    overflow: hidden;
    background: radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px), hsl(var(--neutral-95)/0.2) 0%, hsl(var(--neutral-95)/0.15) 10%, hsl(var(--neutral-95)/0.05) 20%, hsl(var(--neutral-95)/0.001) 30%, transparent 100%);
    background-attachment: fixed;
    opacity: var(--active, 0);
    will-change: opacity;
    transition: opacity 750ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  }
}

/* For CTA buttons or other small elements */
@media (hover: hover) {
  .mini-spotlight {
    position: relative;
  }
  .mini-spotlight:hover {
    --active: 1;
  }
  .mini-spotlight::before {
    content: "";
    position: absolute;
    pointer-events: none;
    border-radius: inherit;
    overflow: hidden;
    background: radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px), hsl(var(--neutral-95)/0.4) 0%, hsl(var(--neutral-95)/0.15) 2%, hsl(var(--neutral-95)/0.05) 5%, hsl(var(--neutral-95)/0.001) 15%, transparent 100%);
    background-attachment: fixed;
    opacity: var(--active, 0);
    will-change: opacity, color;
    transition: opacity 750ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 750ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  }
}

/* ================================================== */
/* Gradients */
/* ================================================== */
.gradient-2xlight {
  background: linear-gradient(to top left, hsl(var(--neutral-90)/0.8) 0%, hsl(var(--neutral-95)/0.6) 60%, hsl(var(--neutral-98)/0.3) 100%);
}

.gradient-xlight {
  background: linear-gradient(to top left, hsl(var(--neutral-70)/0.8) 0%, hsl(var(--neutral-80)/0.6) 60%, hsl(var(--neutral-90)/0.3) 100%);
}

.gradient-light {
  background: linear-gradient(to top left, hsl(var(--neutral-50)/0.8) 0%, hsl(var(--neutral-60)/0.6) 60%, hsl(var(--neutral-70)/0.3) 100%);
}

.gradient-dark {
  background: linear-gradient(to top left, hsl(var(--neutral-30)/0.8) 0%, hsl(var(--neutral-40)/0.6) 60%, hsl(var(--neutral-50)/0.3) 100%);
}

.gradient-xdark {
  background: linear-gradient(to top left, hsl(var(--neutral-15)/0.8) 0%, hsl(var(--neutral-20)/0.6) 60%, hsl(var(--neutral-30)/0.3) 100%);
}

.gradient-2xdark {
  background: linear-gradient(to top left, hsl(var(--neutral-5)/0.8) 0%, hsl(var(--neutral-10)/0.6) 60%, hsl(var(--neutral-15)/0.3) 100%);
}

/* ================================================== */
/* SVGs */
/* ================================================== */
/* SVG masks that let you change their color via CSS */
/* Credit: Chris Coyier */
/* https://css-tricks.com/change-color-of-svg-on-hover/ */
/* üí† example */
/*.svg-copy {*/
/*  mask: url(/assets/icons/Copy.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-square-out {*/
/*  mask: url(/assets/icons/SquareOut.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-chev-up {*/
/*  mask: url(/assets/icons/CaretUp.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-chev-down {*/
/*  mask: url(/assets/icons/CaretDown.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-chev-l {*/
/*  mask: url(/assets/icons/CaretLeft.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-chev-r {*/
/*  mask: url(/assets/icons/CaretRight.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-linkedin {*/
/*  mask: url(/assets/icons/LinkedinLogo.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-instagram {*/
/*  mask: url(/assets/icons/InstagramLogo.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-github {*/
/*  mask: url(/assets/icons/GithubLogo.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-ham {*/
/*  mask: url(/assets/icons/List.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-x {*/
/*  mask: url(/assets/icons/X.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-circleHalf {*/
/*  mask: url(/assets/icons/CircleHalf.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-circleHalfTilt {*/
/*  mask: url(/assets/icons/CircleHalfTilt.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-magnifying-glass {*/
/*  mask: url(/assets/icons/MagnifyingGlass.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-xCircle {*/
/*  mask: url(/assets/icons/XCircle.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*.svg-xCircleOutline {*/
/*  mask: url(/assets/icons/XCircleOutline.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/* Glass */
/* ================================================== */
/* Bevels */
/* ================================================== */
/* Curved bevels */
/* ================================================== */
html {
  --bevel-xs:
          inset 1px 1px 0.5px -1.5px hsl(var(--highlight) / 0.7),
          inset 1.5px 1.5px 0.75px -2.75px hsl(var(--highlight) / 0.5),
          inset 0.25px 0.25px 0.5px -0.25px hsl(var(--highlight) / 0.15),
          inset 0.25px 0.25px 0.25px hsl(var(--highlight) / 0.08),
          inset 0 0 0.25px 0.25px hsl(var(--highlight) / 0.03);
  --bevel-sm:
          inset 1.5px 1.5px 0.75px -2.75px hsl(var(--highlight) / 0.9),
          inset 2px 2px 1px -3px hsl(var(--highlight) / 0.7),
          inset 0.5px 0.5px 0.5px -0.25px hsl(var(--highlight) / 0.1),
          inset 0.5px 0.5px 0.25px hsl(var(--highlight) / 0.05),
          inset 0 0 0.25px 0.25px hsl(var(--highlight) / 0.03);
  --bevel-md:
          inset 2px 2px 1px -3px hsl(var(--highlight) / 0.8),
          inset 2px 2px 1px -3px hsl(var(--highlight) / 0.5),
          inset 1px 1px 1px -0.5px hsl(var(--highlight) / 0.15),
          inset 1px 1px 0.25px hsl(var(--highlight) / 0.03),
          inset 0 0 0.25px 0.5px hsl(var(--highlight) / 0.03);
  --bevel-lg:
          inset 2px 2px 1px -3px hsl(var(--highlight) / 0.8),
          inset 3px 3px 1.5px -4.5px hsl(var(--highlight) / 0.5),
          inset 1.25px 1.25px 1.25px -0.75px hsl(var(--highlight) / 0.15),
          inset 1.25px 1.25px 0.25px hsl(var(--highlight) / 0.03),
          inset 0 0 0.25px 0.5px hsl(var(--highlight) / 0.03);
  --bevel-xl:
          inset 2px 2px 1px -3px hsl(var(--highlight) / 0.8),
          inset 4px 4px 2px -6px hsl(var(--highlight) / 0.3),
          inset 1.5px 1.5px 1.5px -0.75px hsl(var(--highlight) / 0.15),
          inset 1.5px 1.5px 0.25px hsl(var(--highlight) / 0.03),
          inset 0 0 0.25px 0.5px hsl(var(--highlight) / 0.03);
  /* Flat bevels */
  /* ================================================== */
  --flat-bevel-sm:
          inset 0 0.25px 0.35px -0.23px hsl(var(--highlight) / 0.15),
          inset 0 0.5px 0.5px -0.25px hsl(var(--highlight) / 0.1),
          inset 0 0.5px 0.1px 0 hsl(var(--highlight) / 0.08);
  --flat-bevel-md:
          inset 0 0.25px 0.35px -0.23px hsl(var(--highlight) / 0.2),
          inset 0 1px 1px -1px hsl(var(--highlight) / 0.1),
          inset 0 0.8px 0.2px hsl(var(--highlight) / 0.08);
  --flat-bevel-lg:
          inset 0 0.25px 0.35px -0.22px hsl(var(--highlight) / 0.2),
          inset 0 1px 1.25px -1px hsl(var(--highlight) / 0.15),
          inset 0 1px 0.1px hsl(var(--highlight) / 0.08);
}

/* Bevel classes */
/* ================================================== */
.bevel-none {
  box-shadow: none;
}

.bevel-xs {
  -webkit-box-shadow: var(--bevel-xs);
  box-shadow: var(--bevel-xs);
}

.bevel-sm {
  -webkit-box-shadow: var(--bevel-sm);
  box-shadow: var(--bevel-sm);
}

.bevel-md {
  -webkit-box-shadow: var(--bevel-md);
  box-shadow: var(--bevel-md);
}

.bevel-lg {
  -webkit-box-shadow: var(--bevel-lg);
  box-shadow: var(--bevel-lg);
}

.bevel-xl {
  -webkit-box-shadow: var(--bevel-xl);
  box-shadow: var(--bevel-xl);
}

.flat-bevel-sm {
  box-shadow: var(--flat-bevel-sm);
}

.flat-bevel-md {
  box-shadow: var(--flat-bevel-md);
}

.flat-bevel-lg {
  box-shadow: var(--flat-bevel-lg);
}

/* ================================================== */
/* Glass */
/* ================================================== */
/* ‚ö†Ô∏è Glass backgrounds stop working at around 2000px width in Firefox! */
/* ================================================== */
/* Noise textures ‚ú® Config these values */
/* ================================================== */
/* Noise texture generator */
/* https://devsdash.com/tools/noise-texture-generator */
/* ================================================== */
/* backdrop-filter: ‚ú® Config these values */
/* ================================================== */
/* Backdrop filter mixin */
/* ================================================== */
/* üí† example */
/* or */
/* ================================================== */
/* Glass base mixin */
/* ================================================== */
/* Glass filter presets for glass base ‚ú® Config these values */
/* ================================================== */
body {
  --blur: 60px;
  --bright: 1;
  --satu: 1.5;
}

/* 3D glass ‚ú® Config these values */
/* ================================================== */
.glass-3d {
  position: relative;
  z-index: 4;
}
.glass-3d::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-md);
}
.glass-3d::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-3d > * {
  position: relative;
  z-index: 6;
}

.glass-3d-sm {
  position: relative;
  z-index: 4;
}
.glass-3d-sm::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-sm);
}
.glass-3d-sm::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 25px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-3d-sm > * {
  position: relative;
  z-index: 6;
}

/* Flat glass */
/* ================================================== */
/* For elements that span edge-to-edge or don't have border-radius */
.glass-flat {
  position: relative;
  z-index: 4;
}
.glass-flat::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--flat-bevel-md);
}
.glass-flat::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-flat > * {
  position: relative;
  z-index: 6;
}

.glass-flat-sm {
  position: relative;
  z-index: 4;
}
.glass-flat-sm::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--flat-bevel-sm);
}
.glass-flat-sm::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 25px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-flat-sm > * {
  position: relative;
  z-index: 6;
}

/* 2D glass -> no bevel */
/* ================================================== */
.glass-2d {
  position: relative;
  z-index: 4;
}
.glass-2d::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-none);
}
.glass-2d::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-2d > * {
  position: relative;
  z-index: 6;
}

/* ================================================== */
/* Glass container queries */
/* ================================================== */
/* Switch to a flat-bevel at 100vw or bigger to prevent a white line down the left edge */
/* the -16px prevents issues with scrollbars cutting into 100vw */
@container bg (width >= calc(100vw - 16px)) {
  .glass-3d {
    position: relative;
    z-index: 4;
  }
  .glass-3d::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    z-index: 5;
    box-shadow: var(--flat-bevel-md);
  }
  .glass-3d::before {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    z-index: 3;
    background-repeat: repeat;
    background-size: 40px;
      /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

    -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
    backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  }


  .glass-3d > * {
    position: relative;
    z-index: 6;
  }
  .glass-3d-sm {
    position: relative;
    z-index: 4;
  }
  .glass-3d-sm::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    z-index: 5;
    box-shadow: var(--flat-bevel-sm);
  }
  .glass-3d-sm::before {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    z-index: 3;
    background-repeat: repeat;
    background-size: 25px;
      /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

    -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
    backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  }
  .glass-3d-sm > * {
    position: relative;
    z-index: 6;
  }
}
/* ================================================== */
/* Insets */
/* ================================================== */
html {
  /* Insets */
  /* ================================================== */
  --inset-sm:
          inset -2px -2px 1px -3.25px hsl(var(--highlight) / 0.99),
          inset -0.5px -0.5px 0.5px -0.25px hsl(var(--highlight) / 0.3),
          inset -0.75px -0.75px 0.25px hsl(var(--highlight) / 0.1),
          inset 0.5px 0.5px 0.5px -0.5px hsl(var(--shadow) / 0.1),
          inset 0.25px 0.25px 1.25px hsl(var(--shadow) / 0.2),
          inset 1px 1px 2px hsl(var(--shadow) / 0.2),
          inset 2px 2px 16px -8px hsl(var(--shadow) / 0.25);
  --inset-md:
          inset -2px -2px 1px -3.25px hsl(var(--highlight) / 0.99),
          inset -1px -1px 0.75px -0.75px hsl(var(--highlight) / 0.4),
          inset -1px -1px 0.25px hsl(var(--highlight) / 0.1),
          inset 0.75px 0.75px 1px -0.25px hsl(var(--shadow) / 0.1),
          inset 0.25px 0.25px 1.25px hsl(var(--shadow) / 0.2),
          inset 1.25px 1.25px 2px hsl(var(--shadow) / 0.2),
          inset 2px 2px 16px -8px hsl(var(--shadow) / 0.25);
  --inset-lg:
          inset -2px -2px 1px -3.25px hsl(var(--highlight) / 0.99),
          inset -1.25px -1.25px 1px -0.75px hsl(var(--highlight) / 0.4),
          inset -1.25px -1.25px 0.25px hsl(var(--highlight) / 0.1),
          inset 0.75px 0.75px 1px -0.25px hsl(var(--shadow) / 0.1),
          inset 0.25px 0.25px 1.25px hsl(var(--shadow) / 0.2),
          inset 1.5px 1.5px 2.25px hsl(var(--shadow) / 0.2),
          inset 4px 4px 18px -10px hsl(var(--shadow) / 0.25);
  /* Flat insets  */
  /* ================================================== */
  --inset-flat-sm:
          inset 0 -0.75px 0.75px -0.8px hsl(var(--highlight) / 0.4),
          inset 0 -0.75px 0.25px -0.25px hsl(var(--highlight) / 0.15),
          inset 0 0.5px 0.5px -0.55px hsl(var(--shadow) / 0.1),
          inset 0 1.5px 1.5px -1.55px hsl(var(--shadow) / 0.2),
          inset 0 2px 2px -2.25px hsl(var(--shadow) / 0.35),
          inset 0 12px 12px -13px hsl(var(--shadow) / 0.2);
  --inset-flat-md:
          inset 0 -1px 1px -1.05px hsl(var(--highlight) / 0.4),
          inset 0 -1px 0.25px -0.25px hsl(var(--highlight) / 0.15),
          inset 0 0.5px 0.5px -0.55px hsl(var(--shadow) / 0.1),
          inset 0 2px 2px -2.25px hsl(var(--shadow) / 0.25),
          inset 0 3px 3px -3.25px hsl(var(--shadow) / 0.35),
          inset 0 14px 14px -15px hsl(var(--shadow) / 0.2);
  --inset-flat-lg:
          inset 0 -1.5px 1.5px -1.55px hsl(var(--highlight) / 0.4),
          inset 0 -1.5px 0.25px -0.25px hsl(var(--highlight) / 0.15),
          inset 0 0.5px 0.5px -0.55px hsl(var(--shadow) / 0.15),
          inset 0 2.5px 2.5px -2.75px hsl(var(--shadow) / 0.25),
          inset 0 4px 4px -4.25px hsl(var(--shadow) / 0.35),
          inset 0 16px 16px -17px hsl(var(--shadow) / 0.2);
}

/* Rounded inset classes */
/* ================================================== */
.inset-sm {
  box-shadow: var(--inset-sm);
}

.inset-md {
  box-shadow: var(--inset-md);
}

.inset-lg {
  box-shadow: var(--inset-lg);
}

/* Flat inset classes */
/* ================================================== */
.inset-flat-sm {
  box-shadow: var(--inset-flat-sm);
}

.inset-flat-md {
  box-shadow: var(--inset-flat-md);
}

.inset-flat-lg {
  box-shadow: var(--inset-flat-lg);
}

/* Inset background colors */
/* ================================================== */
.inset-bg-reg {
  background-color: var(--inset-bg-reg);
}

.inset-bg-deep {
  background-color: var(--inset-bg-deep);
}

.inset-bg-xdeep {
  background-color: var(--inset-bg-xdeep);
}

/* ================================================== */
/* Shadows */
/* ================================================== */
/* Elevation shadows */
/* ================================================== */
html {
  --sha-3xs:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          0.5px 0.4px 1px hsl(var(--shadow) / 0.1),
          0.5px 0.5px 1.5px hsl(var(--shadow) / 0.08);
  --sha-2xs:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          0.5px 0.4px 1px hsl(var(--shadow) / 0.08),
          1px 0.75px 1.75px -0.1px hsl(var(--shadow) / 0.1);
  --sha-xs:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          1px 0.75px 1.75px -0.1px hsl(var(--shadow) / 0.08),
          2px 1.5px 4px -0.5px hsl(var(--shadow) / 0.08);
  --sha-sm:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          1px 1px 1.5px -0.25px hsl(var(--shadow) / 0.08),
          1.5px 1.5px 2px -1px hsl(var(--shadow) / 0.08),
          3px 3px 8px -1px hsl(var(--shadow) / 0.08);
  --sha-md:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          1px 0.75px 1.75px -0.25px hsl(var(--shadow) / 0.08),
          2px 1.5px 3.5px -0.5px hsl(var(--shadow) / 0.08),
          4px 3px 12px -1px hsl(var(--shadow) / 0.08);
  --sha-lg:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          1.5px 1.5px 2px -0.5px hsl(var(--shadow) / 0.08),
          3px 3px 6px -1px hsl(var(--shadow) / 0.08),
          6px 4.5px 14px -1.5px hsl(var(--shadow) / 0.08);
  --sha-xl:
          0 0 0.3px hsl(var(--shadow) / 0.08),
          0 0 0.75px hsl(var(--shadow) / 0.05),
          1.5px 1.5px 2px -0.5px hsl(var(--shadow) / 0.08),
          3px 3px 6px -1px hsl(var(--shadow) / 0.08),
          8px 6px 18px -2px hsl(var(--shadow) / 0.08);
}

/* Shadows MAP */
/* ================================================== */
.sha-3xs {
  box-shadow: var(--sha-3xs);
}
.sha-2xs {
  box-shadow: var(--sha-2xs);
}
.sha-xs {
  box-shadow: var(--sha-xs);
}
.sha-sm {
  box-shadow: var(--sha-sm);
}
.sha-md {
  box-shadow: var(--sha-md);
}
.sha-lg {
  box-shadow: var(--sha-lg);
}
.sha-xl {
  box-shadow: var(--sha-xl);
}

/* ================================================== */
/* Flat overhang shadows */
/* ================================================== */
html {
  --overhang-sha-xs:
          inset 0 0.5px 1px -1px hsl(var(--shadow) / 0.5),
          inset 0 1px 2px -2px hsl(var(--shadow) / 0.5),
          inset 0 2px 4px -4px hsl(var(--shadow) / 0.3);
  --overhang-sha-sm:
          inset 0 0.5px 1px -1px hsl(var(--shadow) / 0.7),
          inset 0 1px 2px -2px hsl(var(--shadow) / 0.5),
          inset 0 2px 4px -4px hsl(var(--shadow) / 0.3),
          inset 0 4px 8px -8px hsl(var(--shadow) / 0.3);
  --overhang-sha-md:
          inset 0 0.5px 1px -1px hsl(var(--shadow) / 0.5),
          inset 0 1px 2px -2px hsl(var(--shadow) / 0.5),
          inset 0 2px 4px -4px hsl(var(--shadow) / 0.5),
          inset 0 6px 12px -12px hsl(var(--shadow) / 0.3);
  --overhang-sha-lg:
          inset 0 0.5px 1px -1px hsl(var(--shadow) / 0.4),
          inset 0 2px 4px -4px hsl(var(--shadow) / 0.5),
          inset 0 4px 8px -8px hsl(var(--shadow) / 0.5),
          inset 0 8px 16px -16px hsl(var(--shadow) / 0.3);
  --overhang-sha-xl:
          inset 0 0.5px 1px -1px hsl(var(--shadow) / 0.4),
          inset 0 4px 8px -8px hsl(var(--shadow) / 0.5),
          inset 0 8px 16px -16px hsl(var(--shadow) / 0.5),
          inset 0 10px 20px -20px hsl(var(--shadow) / 0.3);
}

/* Flat overhang shadow MAP */
/* ================================================== */
.overhang-sha-xs {
  box-shadow: var(--overhang-sha-xs);
}
.overhang-sha-sm {
  box-shadow: var(--overhang-sha-sm);
}
.overhang-sha-md {
  box-shadow: var(--overhang-sha-md);
}
.overhang-sha-lg {
  box-shadow: var(--overhang-sha-lg);
}
.overhang-sha-xl {
  box-shadow: var(--overhang-sha-xl);
}

/* ================================================== */
/* Text shadows */
/* ================================================== */
html {
  --text-sha-3xs:
          0.2px 0 0.2px hsl(var(--shadow) / 0.1),
          0.2px 0.2px 0.2px hsl(var(--shadow) / 0.2),
          0.25px 0.25px 0.5px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.15);
  --text-sha-2xs:
          0.2px 0 0.2px hsl(var(--shadow) / 0.1),
          0.25px 0.25px 0.25px hsl(var(--shadow) / 0.2),
          0.25px 0.25px 0.5px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.15);
  --text-sha-xs:
          0.1px 0.1px hsl(var(--shadow) / 0.3),
          0.25px 0.25px hsl(var(--shadow) / 0.35),
          0.02em 0.02em 0.04em hsl(var(--shadow) / 0.2),
          0 0 0.05em hsl(var(--shadow) / 0.2),
          0 0 0.7em hsl(var(--shadow) / 0.2);
  --text-sha-sm:
          0.2px 0 0.2px hsl(var(--shadow) / 0.1),
          0.35px 0.35px 0.35px hsl(var(--shadow) / 0.25),
          0.5px 0.5px 1px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.15);
  --text-sha-md:
          0.2px 0 0.2px hsl(var(--shadow) / 0.1),
          0.4px 0.4px 0.4px hsl(var(--shadow) / 0.25),
          0.5px 0.5px 1px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.2);
  --text-sha-lg:
          0.25px 0 0.25px hsl(var(--shadow) / 0.1),
          0.45px 0.45px 0.45px hsl(var(--shadow) / 0.25),
          0.75px 0.75px 1.5px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.2);
  --text-sha-xl:
          0.25px 0 0.25px hsl(var(--shadow) / 0.1),
          0.5px 0.5px 0.5px hsl(var(--shadow) / 0.25),
          0.75px 0.75px 1.5px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.2);
  --text-sha-2xl:
          0.25px 0 0.25px hsl(var(--shadow) / 0.1),
          0.55px 0.55px 0.55px hsl(var(--shadow) / 0.25),
          1px 1px 2px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.2);
  --text-sha-3xl:
          0.25px 0 0.25px hsl(var(--shadow) / 0.1),
          0.6px 0.6px 0.6px hsl(var(--shadow) / 0.25),
          1px 1px 2px hsl(var(--shadow) / 0.1),
          0 0 0.05em hsl(var(--shadow) / 0.1),
          0 0 0.7em hsl(var(--shadow) / 0.2);
}

/* Text shadow MAP */
/* ================================================== */
.text-sha-3xs {
  text-shadow: var(--text-sha-3xs);
}
.text-sha-2xs {
  text-shadow: var(--text-sha-2xs);
}
.text-sha-xs {
  text-shadow: var(--text-sha-xs);
}
.text-sha-sm {
  text-shadow: var(--text-sha-sm);
}
.text-sha-md {
  text-shadow: var(--text-sha-md);
}
.text-sha-lg {
  text-shadow: var(--text-sha-lg);
}
.text-sha-xl {
  text-shadow: var(--text-sha-xl);
}
.text-sha-2xl {
  text-shadow: var(--text-sha-2xl);
}
.text-sha-3xl {
  text-shadow: var(--text-sha-3xl);
}

/* Components */
/* ================================================== */
/* Accordion */
/* ================================================== */
.accordion-solo {
  --space: var(--sm);
  --neg-space: calc(-1 * var(--space));
  --radius: var(--sm);
  pointer-events: none;
  overflow: hidden;
  z-index: 7;
  width: 100%;
  display: grid;
  background-color: var(--tint-xdark);
  border-radius: var(--radius);
  box-shadow: var(--sha-md);
}
.accordion-solo .accordion-btn[aria-expanded=true] {
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.accordion-solo .accordion-btn[aria-expanded=false] {
  border-radius: var(--radius);
}

.accordion-multi {
  --space: var(--sm);
  --neg-space: calc(-1 * var(--space));
  --radius: var(--sm);
  pointer-events: none;
  overflow: hidden;
  z-index: 7;
  width: 100%;
  display: grid;
  background-color: var(--tint-xdark);
  border-radius: var(--radius);
  box-shadow: var(--sha-md);
}
.accordion-multi > :last-child .accordion-btn[aria-expanded=false] {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: var(--radius);
  border-bottom-left-radius: var(--radius);
  overflow: hidden;
}
.accordion-multi > :last-child .accordion-btn[aria-expanded=true] {
  border-radius: 0;
}

.accordion-btn {
  position: relative;
  pointer-events: auto;
  cursor: pointer;
  z-index: 8;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--sm);
  padding: var(--space);
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-md);
  text-align: start;
  color: var(--text-base);
  text-shadow: var(--text-sha-md);
  will-change: background-color;
  transition: background-color 200ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.accordion-btn:hover {
  background-color: var(--tint-light);
}
.accordion-btn:focus-visible {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
  background-color: var(--tint-light);
}

.accordion-header {
  pointer-events: none;
  z-index: 8;
  width: 100%;
  padding-top: calc(var(--space) * 1.5);
  padding-right: var(--space);
  padding-bottom: var(--space);
  padding-left: var(--space);
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  text-align: start;
  letter-spacing: 0.02em;
  font-size: var(--text-lg);
  color: var(--text-strong);
  text-shadow: var(--text-sha-xl);
}

.accordion-icon {
  pointer-events: none;
  display: inline;
  z-index: -1;
  background-color: var(--color-white);
  height: var(--ui-h-xs);
  transform: rotate(180deg);
  transition: transform 750ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.accordion-icon.is-closed {
  transform: rotate(0deg);
}

.accordion-content {
  pointer-events: none;
  z-index: 7;
  display: grid;
  gap: var(--space);
  background-color: var(--tint-3xdark);
  height: fit-content;
  padding: var(--space);
  opacity: 1;
  transition: height 300ms cubic-bezier(0.46, 0.43, 0.1, 0.99), padding 300ms cubic-bezier(0.46, 0.43, 0.1, 0.99), opacity 300ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.accordion-content.is-closed {
  height: 0;
  padding: 0;
  opacity: 0;
}

/* Remove border-radius at 100vw or bigger */
/* the -16px prevents issues with scrollbars cutting into 100vw */
@container bg (width >= calc(100vw - 16px)) {
  .accordion-solo,
  .accordion-multi {
    --radius: 0;
  }
}
/* ================================================== */
/* Bento grids */
/* ================================================== */
/* Bento grid with 2 to 3 columns */
/* ================================================== */
.bento-2to3 {
  width: 100%;
  display: grid;
  place-content: center;
  gap: var(--md);
  grid-template-columns: 1fr 1fr;
}
@media only screen and (min-width: 48rem) {
  .bento-2to3 {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/* Bento grid with 1 to 5 columns */
/* ================================================== */
.bento-1to5 {
  width: 100%;
  display: grid;
  grid-template-columns: 150px;
  place-content: center;
  gap: var(--md);
}
@media only screen and (min-width: 22.5rem) {
  .bento-1to5 {
    grid-template-columns: 1fr 1fr;
  }
}
@media only screen and (min-width: 35rem) {
  .bento-1to5 {
    grid-template-columns: 1fr 1fr 1fr;
  }
}
@media only screen and (min-width: 48rem) {
  .bento-1to5 {
    gap: var(--lg);
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}
@media only screen and (min-width: 64rem) {
  .bento-1to5 {
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  }
}

/* Bento children */
/* ================================================== */
.bento-cube {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--md);
}

.bento-rect {
  min-width: fit-content;
  width: 100%;
  aspect-ratio: 3/1;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: var(--md);
  border-radius: var(--md);
}

/* ================================================== */
/* Buttons */
/* ================================================== */
/* Button transitions ‚ú® Config these values */
/* ================================================== */
/* Button text ‚ú® Config these values */
/* ================================================== */
/* ================================================== */
/* Button structure */
/* ================================================== */
/* Button sizes ‚ú® Config these values */
/* ================================================== */
.btn-sm {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-content-h: var(--btn-content-h, 1rem);
  --_btn-padding-x: var(--btn-padding-x, 1.5rem);
  --_btn-padding-top: var(--btn-padding-top, 0);
  --_btn-padding-bottom: var(--btn-padding-bottom, 0);
  --_btn-gap: var(--btn-gap, 0.25rem);
  --_btn-radius: var(--btn-radius, 999px);
  position: relative;
  z-index: 17;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: var(--_btn-h);
  padding-top: 0; /* added to .btn-text so svg is not affected */
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0; /* added to .btn-text so svg is not affected */
  padding-left: var(--_btn-padding-x);
  gap: var(--_btn-gap);
  border-radius: var(--_btn-radius);
  pointer-events: auto;
  cursor: pointer;
  --btn-h: var(--ui-h-sm);
  --btn-content-h: 0.95rem;
  --btn-padding-x: calc(var(--btn-h) * 0.55);
  --btn-padding-top: 0;
  --btn-padding-bottom: 0;
  --btn-gap: calc(var(--btn-h) * 0.25);
  --btn-radius: 999px;
}
.btn-sm::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 18;
}
.btn-sm::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 16;
}
.btn-sm > .btn-text {
  pointer-events: none;
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  text-shadow: var(--text-sha-sm);
  z-index: 19;
  font-size: var(--_btn-content-h);
  line-height: var(--_btn-content-h);
  padding-top: var(--_btn-padding-top);
  padding-bottom: var(--_btn-padding-bottom);
  pointer-events: none;
}
.btn-sm > svg {
  z-index: 19;
  height: calc(var(--_btn-content-h) * 1.15);
  aspect-ratio: 1;
  pointer-events: none;
}
.btn-sm.icon-end {
  padding-top: 0;
  padding-right: calc(var(--_btn-padding-x) * 0.8);
  padding-bottom: 0;
  padding-left: var(--_btn-padding-x);
}
.btn-sm.icon-start {
  padding-top: 0;
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0;
  padding-left: calc(var(--_btn-padding-x) * 0.8);
}

.btn-md {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-content-h: var(--btn-content-h, 1rem);
  --_btn-padding-x: var(--btn-padding-x, 1.5rem);
  --_btn-padding-top: var(--btn-padding-top, 0);
  --_btn-padding-bottom: var(--btn-padding-bottom, 0);
  --_btn-gap: var(--btn-gap, 0.25rem);
  --_btn-radius: var(--btn-radius, 999px);
  position: relative;
  z-index: 17;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: var(--_btn-h);
  padding-top: 0; /* added to .btn-text so svg is not affected */
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0; /* added to .btn-text so svg is not affected */
  padding-left: var(--_btn-padding-x);
  gap: var(--_btn-gap);
  border-radius: var(--_btn-radius);
  pointer-events: auto;
  cursor: pointer;
  --btn-h: var(--ui-h-md);
  --btn-content-h: 1.15rem;
  --btn-padding-x: calc(var(--btn-h) * 0.6);
  --btn-padding-top: 0;
  --btn-padding-bottom: 0;
  --btn-gap: calc(var(--btn-h) * 0.25);
  --btn-radius: 999px;
}
.btn-md::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 18;
}
.btn-md::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 16;
}
.btn-md > .btn-text {
  pointer-events: none;
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  text-shadow: var(--text-sha-sm);
  z-index: 19;
  font-size: var(--_btn-content-h);
  line-height: var(--_btn-content-h);
  padding-top: var(--_btn-padding-top);
  padding-bottom: var(--_btn-padding-bottom);
  pointer-events: none;
}
.btn-md > svg {
  z-index: 19;
  height: calc(var(--_btn-content-h) * 1.15);
  aspect-ratio: 1;
  pointer-events: none;
}
.btn-md.icon-end {
  padding-top: 0;
  padding-right: calc(var(--_btn-padding-x) * 0.8);
  padding-bottom: 0;
  padding-left: var(--_btn-padding-x);
}
.btn-md.icon-start {
  padding-top: 0;
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0;
  padding-left: calc(var(--_btn-padding-x) * 0.8);
}

.btn-lg {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-content-h: var(--btn-content-h, 1rem);
  --_btn-padding-x: var(--btn-padding-x, 1.5rem);
  --_btn-padding-top: var(--btn-padding-top, 0);
  --_btn-padding-bottom: var(--btn-padding-bottom, 0);
  --_btn-gap: var(--btn-gap, 0.25rem);
  --_btn-radius: var(--btn-radius, 999px);
  position: relative;
  z-index: 17;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: var(--_btn-h);
  padding-top: 0; /* added to .btn-text so svg is not affected */
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0; /* added to .btn-text so svg is not affected */
  padding-left: var(--_btn-padding-x);
  gap: var(--_btn-gap);
  border-radius: var(--_btn-radius);
  pointer-events: auto;
  cursor: pointer;
  --btn-h: var(--ui-h-lg);
  --btn-content-h: 1.25rem;
  --btn-padding-x: calc(var(--btn-h) * 0.65);
  --btn-padding-top: 0;
  --btn-padding-bottom: 0;
  --btn-gap: calc(var(--btn-h) * 0.25);
  --btn-radius: 999px;
}
.btn-lg::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 18;
}
.btn-lg::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 16;
}
.btn-lg > .btn-text {
  pointer-events: none;
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  text-shadow: var(--text-sha-sm);
  z-index: 19;
  font-size: var(--_btn-content-h);
  line-height: var(--_btn-content-h);
  padding-top: var(--_btn-padding-top);
  padding-bottom: var(--_btn-padding-bottom);
  pointer-events: none;
}
.btn-lg > svg {
  z-index: 19;
  height: calc(var(--_btn-content-h) * 1.15);
  aspect-ratio: 1;
  pointer-events: none;
}
.btn-lg.icon-end {
  padding-top: 0;
  padding-right: calc(var(--_btn-padding-x) * 0.8);
  padding-bottom: 0;
  padding-left: var(--_btn-padding-x);
}
.btn-lg.icon-start {
  padding-top: 0;
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0;
  padding-left: calc(var(--_btn-padding-x) * 0.8);
}

.btn-full-w {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-content-h: var(--btn-content-h, 1rem);
  --_btn-padding-x: var(--btn-padding-x, 1.5rem);
  --_btn-padding-top: var(--btn-padding-top, 0);
  --_btn-padding-bottom: var(--btn-padding-bottom, 0);
  --_btn-gap: var(--btn-gap, 0.25rem);
  --_btn-radius: var(--btn-radius, 999px);
  position: relative;
  z-index: 17;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: var(--_btn-h);
  padding-top: 0; /* added to .btn-text so svg is not affected */
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0; /* added to .btn-text so svg is not affected */
  padding-left: var(--_btn-padding-x);
  gap: var(--_btn-gap);
  border-radius: var(--_btn-radius);
  pointer-events: auto;
  cursor: pointer;
  width: 100%;
  --btn-h: var(--ui-h-xl);
  --btn-content-h: 1.25rem;
  --btn-padding-x: calc(var(--btn-h) * 0.7);
  --btn-padding-top: 0;
  --btn-padding-bottom: 0;
  --btn-gap: calc(var(--btn-h) * 0.25);
  --btn-radius: var(--2xs);
}
.btn-full-w::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 18;
}
.btn-full-w::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 16;
}
.btn-full-w > .btn-text {
  pointer-events: none;
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  text-shadow: var(--text-sha-sm);
  z-index: 19;
  font-size: var(--_btn-content-h);
  line-height: var(--_btn-content-h);
  padding-top: var(--_btn-padding-top);
  padding-bottom: var(--_btn-padding-bottom);
  pointer-events: none;
}
.btn-full-w > svg {
  z-index: 19;
  height: calc(var(--_btn-content-h) * 1.15);
  aspect-ratio: 1;
  pointer-events: none;
}
.btn-full-w.icon-end {
  padding-top: 0;
  padding-right: calc(var(--_btn-padding-x) * 0.8);
  padding-bottom: 0;
  padding-left: var(--_btn-padding-x);
}
.btn-full-w.icon-start {
  padding-top: 0;
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0;
  padding-left: calc(var(--_btn-padding-x) * 0.8);
}

/* ================================================== */
/* Round icon button structure */
/* ================================================== */
/* Icon button sizes ‚ú® Config these values */
/* ================================================== */
.btn-icon-sm {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-icon-h: var(--btn-icon-h, 1rem);
  position: relative;
  z-index: 17;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--_btn-h);
  height: var(--_btn-h);
  border-radius: 999px;
  pointer-events: auto;
  cursor: pointer;
  --btn-h: var(--ui-h-sm);
  --btn-icon-h: calc(var(--btn-h) * 0.55);
}
.btn-icon-sm::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}
.btn-icon-sm::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}
.btn-icon-sm > svg {
  z-index: 19;
  height: var(--_btn-icon-h);
  width: var(--_btn-icon-h);
  aspect-ratio: 1;
  pointer-events: none;
  will-change: width, height;
  transition: width 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), height 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-icon-sm:hover > svg {
  width: calc(var(--_btn-icon-h) * 1.1);
  height: calc(var(--_btn-icon-h) * 1.1);
}

.btn-icon-md {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-icon-h: var(--btn-icon-h, 1rem);
  position: relative;
  z-index: 17;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--_btn-h);
  height: var(--_btn-h);
  border-radius: 999px;
  pointer-events: auto;
  cursor: pointer;
  --btn-h: var(--ui-h-md);
  --btn-icon-h: calc(var(--btn-h) * 0.55);
}
.btn-icon-md::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}
.btn-icon-md::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}
.btn-icon-md > svg {
  z-index: 19;
  height: var(--_btn-icon-h);
  width: var(--_btn-icon-h);
  aspect-ratio: 1;
  pointer-events: none;
  will-change: width, height;
  transition: width 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), height 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-icon-md:hover > svg {
  width: calc(var(--_btn-icon-h) * 1.1);
  height: calc(var(--_btn-icon-h) * 1.1);
}

.btn-icon-lg {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-icon-h: var(--btn-icon-h, 1rem);
  position: relative;
  z-index: 17;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--_btn-h);
  height: var(--_btn-h);
  border-radius: 999px;
  pointer-events: auto;
  cursor: pointer;
  --btn-h: var(--ui-h-lg);
  --btn-icon-h: calc(var(--btn-h) * 0.55);
}
.btn-icon-lg::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}
.btn-icon-lg::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}
.btn-icon-lg > svg {
  z-index: 19;
  height: var(--_btn-icon-h);
  width: var(--_btn-icon-h);
  aspect-ratio: 1;
  pointer-events: none;
  will-change: width, height;
  transition: width 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), height 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-icon-lg:hover > svg {
  width: calc(var(--_btn-icon-h) * 1.1);
  height: calc(var(--_btn-icon-h) * 1.1);
}

/* ================================================== */
/* Button style */
/* ================================================== */
/* Primary button ‚ú® Config these values */
/* ================================================== */
/* Secondary button ‚ú® Config these values */
/* ================================================== */
/* Outline button ‚ú® Config these values */
/* ================================================== */
/* Ghost button ‚ú® Config these values */
/* ================================================== */
.btn-primary {
  --_btn-text: var(--btn-text, black);
  --_btn-icon: var(--btn-icon, var(--_btn-text));
  --_btn-state-bg: var(--btn-state-bg, rgba(36, 156, 3, 0.9));
  --_btn-state-text: var(--btn-state-text, var(--_btn-text));
  --_btn-state-icon: var(--btn-state-icon, var(--_btn-state-text));
  --_btn-bevel: var(--btn-bevel, none);
  --_btn-blur: var(--btn-blur, 3px);
  --_btn-brightness: var(--btn-brightness, 1);
  --_btn-saturate: var(--btn-saturate, 1.2);
  --_btn-rest: var(--btn-rest, 0.1);
  --_btn-hover: var(--btn-hover, 0.3);
  --_btn-focus: var(--btn-focus, 0.3);
  --_btn-active: var(--btn-active, 0.7);
  --_btn-disabled: var(--btn-disabled, 0.6);
  --btn-text: var(--text-xstrong);
  --btn-icon: var(--btn-text);
  --btn-state-bg: hsl(var(--primary-10) / 0.9);
  --btn-state-text: var(--btn-text);
  --btn-state-icon: var(--btn-state-text);
  --btn-bevel: var(--bevel-md);
  box-shadow: var(--sha-2xs);
  --btn-blur: 15px;
  --btn-brightness: 1;
  --btn-saturate: 2.75;
  --btn-rest: 0.25;
  --btn-hover: 0.6;
  --btn-focus: 0.6;
  --btn-active: 1;
  --btn-disabled: 0.6;
}
.btn-primary::before {
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  background-color: var(--_btn-state-bg);
  opacity: var(--_btn-rest);
}
.btn-primary::after {
  -webkit-backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  box-shadow: var(--_btn-bevel);
}
.btn-primary > .btn-text {
  color: var(--_btn-text);
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-primary > svg {
  background-color: var(--_btn-icon);
  will-change: background-color;
  transition: background-color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-primary:hover > .btn-text {
  color: var(--_btn-state-text);
}
.btn-primary:hover > svg {
  background-color: var(--_btn-state-icon);
}
.btn-primary:hover::before {
  opacity: var(--_btn-hover);
}
.btn-primary:focus-visible > .btn-text {
  color: var(--_btn-state-text);
}
.btn-primary:focus-visible > svg {
  background-color: var(--_btn-state-icon);
}
.btn-primary:focus-visible::before {
  opacity: var(--_btn-focus);
}
.btn-primary:focus-visible::after {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}
.btn-primary:active > .btn-text {
  color: var(--_btn-state-text);
}
.btn-primary:active > svg {
  background-color: var(--_btn-state-icon);
}
.btn-primary:active::before {
  opacity: var(--_btn-active);
}
.btn-primary:disabled {
  cursor: not-allowed;
  opacity: var(--_btn-disabled);
  background-color: hsl(var(--neutral-10)/0.1);
}

.btn-secondary {
  --_btn-text: var(--btn-text, black);
  --_btn-icon: var(--btn-icon, var(--_btn-text));
  --_btn-state-bg: var(--btn-state-bg, rgba(36, 156, 3, 0.9));
  --_btn-state-text: var(--btn-state-text, var(--_btn-text));
  --_btn-state-icon: var(--btn-state-icon, var(--_btn-state-text));
  --_btn-bevel: var(--btn-bevel, none);
  --_btn-blur: var(--btn-blur, 3px);
  --_btn-brightness: var(--btn-brightness, 1);
  --_btn-saturate: var(--btn-saturate, 1.2);
  --_btn-rest: var(--btn-rest, 0.1);
  --_btn-hover: var(--btn-hover, 0.3);
  --_btn-focus: var(--btn-focus, 0.3);
  --_btn-active: var(--btn-active, 0.7);
  --_btn-disabled: var(--btn-disabled, 0.6);
  --btn-text: var(--text-xstrong);
  --btn-icon: var(--btn-text);
  --btn-state-bg: hsl(var(--primary-5) / 0.9);
  --btn-state-text: var(--btn-text);
  --btn-state-icon: var(--btn-state-text);
  --btn-bevel: var(--bevel-sm);
  box-shadow: var(--sha-3xs);
  --btn-blur: 10px;
  --btn-brightness: 0.8;
  --btn-saturate: 1.5;
  --btn-rest: 0.1;
  --btn-hover: 0.5;
  --btn-focus: 0.5;
  --btn-active: 0.9;
  --btn-disabled: 0.6;
}
.btn-secondary::before {
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  background-color: var(--_btn-state-bg);
  opacity: var(--_btn-rest);
}
.btn-secondary::after {
  -webkit-backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  box-shadow: var(--_btn-bevel);
}
.btn-secondary > .btn-text {
  color: var(--_btn-text);
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-secondary > svg {
  background-color: var(--_btn-icon);
  will-change: background-color;
  transition: background-color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-secondary:hover > .btn-text {
  color: var(--_btn-state-text);
}
.btn-secondary:hover > svg {
  background-color: var(--_btn-state-icon);
}
.btn-secondary:hover::before {
  opacity: var(--_btn-hover);
}
.btn-secondary:focus-visible > .btn-text {
  color: var(--_btn-state-text);
}
.btn-secondary:focus-visible > svg {
  background-color: var(--_btn-state-icon);
}
.btn-secondary:focus-visible::before {
  opacity: var(--_btn-focus);
}
.btn-secondary:focus-visible::after {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}
.btn-secondary:active > .btn-text {
  color: var(--_btn-state-text);
}
.btn-secondary:active > svg {
  background-color: var(--_btn-state-icon);
}
.btn-secondary:active::before {
  opacity: var(--_btn-active);
}
.btn-secondary:disabled {
  cursor: not-allowed;
  opacity: var(--_btn-disabled);
  background-color: hsl(var(--neutral-10)/0.1);
}

.btn-outline {
  --_btn-text: var(--btn-text, black);
  --_btn-icon: var(--btn-icon, var(--_btn-text));
  --_btn-state-bg: var(--btn-state-bg, rgba(36, 156, 3, 0.9));
  --_btn-state-text: var(--btn-state-text, var(--_btn-text));
  --_btn-state-icon: var(--btn-state-icon, var(--_btn-state-text));
  --_btn-bevel: var(--btn-bevel, none);
  --_btn-blur: var(--btn-blur, 3px);
  --_btn-brightness: var(--btn-brightness, 1);
  --_btn-saturate: var(--btn-saturate, 1.2);
  --_btn-rest: var(--btn-rest, 0.1);
  --_btn-hover: var(--btn-hover, 0.3);
  --_btn-focus: var(--btn-focus, 0.3);
  --_btn-active: var(--btn-active, 0.7);
  --_btn-disabled: var(--btn-disabled, 0.6);
  --btn-text: var(--text-2xstrong);
  --btn-icon: var(--btn-text);
  --btn-state-bg: hsl(var(--neutral-50) / 0.95);
  --btn-state-text: var(--btn-text);
  --btn-state-icon: var(--btn-state-text);
  --btn-bevel: none;
  outline: 1.5px solid hsl(var(--neutral-95)/0.6);
  --btn-blur: 10px;
  --btn-brightness: 0.95;
  --btn-saturate: 1.1;
  --btn-rest: 0;
  --btn-hover: 0.5;
  --btn-focus: 0.5;
  --btn-active: 0.99;
  --btn-disabled: 0.6;
}
.btn-outline::before {
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  background-color: var(--_btn-state-bg);
  opacity: var(--_btn-rest);
}
.btn-outline::after {
  -webkit-backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  box-shadow: var(--_btn-bevel);
}
.btn-outline > .btn-text {
  color: var(--_btn-text);
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-outline > svg {
  background-color: var(--_btn-icon);
  will-change: background-color;
  transition: background-color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-outline:hover > .btn-text {
  color: var(--_btn-state-text);
}
.btn-outline:hover > svg {
  background-color: var(--_btn-state-icon);
}
.btn-outline:hover::before {
  opacity: var(--_btn-hover);
}
.btn-outline:focus-visible > .btn-text {
  color: var(--_btn-state-text);
}
.btn-outline:focus-visible > svg {
  background-color: var(--_btn-state-icon);
}
.btn-outline:focus-visible::before {
  opacity: var(--_btn-focus);
}
.btn-outline:focus-visible::after {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}
.btn-outline:active > .btn-text {
  color: var(--_btn-state-text);
}
.btn-outline:active > svg {
  background-color: var(--_btn-state-icon);
}
.btn-outline:active::before {
  opacity: var(--_btn-active);
}
.btn-outline:disabled {
  cursor: not-allowed;
  opacity: var(--_btn-disabled);
  background-color: hsl(var(--neutral-10)/0.1);
}

.btn-ghost {
  --_btn-text: var(--btn-text, black);
  --_btn-icon: var(--btn-icon, var(--_btn-text));
  --_btn-state-bg: var(--btn-state-bg, rgba(36, 156, 3, 0.9));
  --_btn-state-text: var(--btn-state-text, var(--_btn-text));
  --_btn-state-icon: var(--btn-state-icon, var(--_btn-state-text));
  --_btn-bevel: var(--btn-bevel, none);
  --_btn-blur: var(--btn-blur, 3px);
  --_btn-brightness: var(--btn-brightness, 1);
  --_btn-saturate: var(--btn-saturate, 1.2);
  --_btn-rest: var(--btn-rest, 0.1);
  --_btn-hover: var(--btn-hover, 0.3);
  --_btn-focus: var(--btn-focus, 0.3);
  --_btn-active: var(--btn-active, 0.7);
  --_btn-disabled: var(--btn-disabled, 0.6);
  --btn-text: var(--text-2xstrong);
  --btn-icon: var(--btn-text);
  --btn-state-bg: hsl(var(--primary-95) / 0.9);
  --btn-state-text: var(--tint-3xdark);
  --btn-state-icon: var(--btn-state-text);
  --btn-bevel: none;
  background-color: transparent;
  --btn-blur: 0px;
  --btn-brightness: 1;
  --btn-saturate: 1;
  --btn-rest: 0;
  --btn-hover: 0.25;
  --btn-focus: 0.25;
  --btn-active: 0.4;
  --btn-disabled: 0.5;
}
.btn-ghost::before {
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  background-color: var(--_btn-state-bg);
  opacity: var(--_btn-rest);
}
.btn-ghost::after {
  -webkit-backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  box-shadow: var(--_btn-bevel);
}
.btn-ghost > .btn-text {
  color: var(--_btn-text);
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-ghost > svg {
  background-color: var(--_btn-icon);
  will-change: background-color;
  transition: background-color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.btn-ghost:hover > .btn-text {
  color: var(--_btn-state-text);
}
.btn-ghost:hover > svg {
  background-color: var(--_btn-state-icon);
}
.btn-ghost:hover::before {
  opacity: var(--_btn-hover);
}
.btn-ghost:focus-visible > .btn-text {
  color: var(--_btn-state-text);
}
.btn-ghost:focus-visible > svg {
  background-color: var(--_btn-state-icon);
}
.btn-ghost:focus-visible::before {
  opacity: var(--_btn-focus);
}
.btn-ghost:focus-visible::after {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}
.btn-ghost:active > .btn-text {
  color: var(--_btn-state-text);
}
.btn-ghost:active > svg {
  background-color: var(--_btn-state-icon);
}
.btn-ghost:active::before {
  opacity: var(--_btn-active);
}
.btn-ghost:disabled {
  cursor: not-allowed;
  opacity: var(--_btn-disabled);
  background-color: hsl(var(--neutral-10)/0.1);
}
.btn-ghost::after {
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
  box-shadow: none;
}

/* New button template ‚ú® Config these values */
/* ================================================== */
.my-new-btn {
  --_btn-text: var(--btn-text, black);
  --_btn-icon: var(--btn-icon, var(--_btn-text));
  --_btn-state-bg: var(--btn-state-bg, rgba(36, 156, 3, 0.9));
  --_btn-state-text: var(--btn-state-text, var(--_btn-text));
  --_btn-state-icon: var(--btn-state-icon, var(--_btn-state-text));
  --_btn-bevel: var(--btn-bevel, none);
  --_btn-blur: var(--btn-blur, 3px);
  --_btn-brightness: var(--btn-brightness, 1);
  --_btn-saturate: var(--btn-saturate, 1.2);
  --_btn-rest: var(--btn-rest, 0.1);
  --_btn-hover: var(--btn-hover, 0.3);
  --_btn-focus: var(--btn-focus, 0.3);
  --_btn-active: var(--btn-active, 0.7);
  --_btn-disabled: var(--btn-disabled, 0.6);
  --btn-text: black;
  --btn-icon: darkblue;
  --btn-state-bg: black;
  --btn-state-text: white;
  --btn-state-icon: lightblue;
  --btn-bevel: var(--bevel-md);
  --btn-blur: 8px;
  --btn-brightness: 1;
  --btn-saturate: 1.5;
  --btn-rest: 0.3;
  --btn-hover: 0.6;
  --btn-focus: 0.6;
  --btn-active: 0.9;
  --btn-disabled: 0.6;
}
.my-new-btn::before {
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  background-color: var(--_btn-state-bg);
  opacity: var(--_btn-rest);
}
.my-new-btn::after {
  -webkit-backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  backdrop-filter: blur(var(--_btn-blur)) brightness(var(--_btn-brightness)) saturate(var(--_btn-saturate));
  box-shadow: var(--_btn-bevel);
}
.my-new-btn > .btn-text {
  color: var(--_btn-text);
  will-change: opacity, color;
  transition: opacity 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99), color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.my-new-btn > svg {
  background-color: var(--_btn-icon);
  will-change: background-color;
  transition: background-color 500ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.my-new-btn:hover > .btn-text {
  color: var(--_btn-state-text);
}
.my-new-btn:hover > svg {
  background-color: var(--_btn-state-icon);
}
.my-new-btn:hover::before {
  opacity: var(--_btn-hover);
}
.my-new-btn:focus-visible > .btn-text {
  color: var(--_btn-state-text);
}
.my-new-btn:focus-visible > svg {
  background-color: var(--_btn-state-icon);
}
.my-new-btn:focus-visible::before {
  opacity: var(--_btn-focus);
}
.my-new-btn:focus-visible::after {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}
.my-new-btn:active > .btn-text {
  color: var(--_btn-state-text);
}
.my-new-btn:active > svg {
  background-color: var(--_btn-state-icon);
}
.my-new-btn:active::before {
  opacity: var(--_btn-active);
}
.my-new-btn:disabled {
  cursor: not-allowed;
  opacity: var(--_btn-disabled);
  background-color: hsl(var(--neutral-10)/0.1);
}

/* üí† example */
/* ================================================== */
/* Cards */
/* ================================================== */
/* Card base */
/* ================================================== */
.card {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  --_card-radius: var(--card-radius, 1.5rem);
  z-index: 7;
  position: relative;
  height: fit-content;
  display: grid;
  gap: var(--_space);
  padding: var(--_space);
  overflow: hidden;
  pointer-events: auto;
  border-radius: var(--_card-radius);
}

/* Cards that fit the width of their content */
/* ================================================== */
.card-fit-tight {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  --_card-radius: var(--card-radius, 1.5rem);
  z-index: 7;
  position: relative;
  height: fit-content;
  display: grid;
  gap: var(--_space);
  padding: var(--_space);
  overflow: hidden;
  pointer-events: auto;
  border-radius: var(--_card-radius);
  --space: var(--xl);
  max-width: 100%;
  width: fit-content;
  border-radius: max(0px, min(var(--md), (100vw - 16px - 100%) * 9999))/var(--md);
}

.card-fit-roomy {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  --_card-radius: var(--card-radius, 1.5rem);
  z-index: 7;
  position: relative;
  height: fit-content;
  display: grid;
  gap: var(--_space);
  padding: var(--_space);
  overflow: hidden;
  pointer-events: auto;
  border-radius: var(--_card-radius);
  --space: var(--3xl);
  max-width: 100%;
  width: fit-content;
  border-radius: max(0px, min(var(--lg), (100vw - 16px - 100%) * 9999))/var(--lg);
}

/* Card children */
/* ================================================== */
.title-group {
  z-index: 8;
  display: grid;
  gap: 0.5em;
}

.card-title-lg {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 200;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  font-size: var(--text-2xl);
  text-align: center;
  text-shadow: var(--text-sha-lg);
  z-index: 8;
}

.card-title-md {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  z-index: 8;
  text-align: center;
  font-size: var(--text-xl);
  text-shadow: var(--text-sha-md);
  color: var(--text-base);
}

.card-subtitle {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  text-align: center;
  font-size: var(var(--text-sm));
  letter-spacing: -0.005em;
  line-height: calc(0.125em + 2.25ex + 0.125em);
  color: var(--text-mild);
  text-shadow: var(--text-sha-3xs);
  z-index: 8;
}

/* Card Container queries */
/* ================================================== */
/* 360px and smaller */
@container bg (width < 360px ) {
  .card {
    --space: 7cqw;
    --card-radius: 7cqw;
  }
  .title-group {
    gap: 0.5em;
  }
  .card-title-lg {
    font-size: 8cqw;
  }
  .card-subtitle {
    font-size: var(--text-xs);
  }
}
/* breakpoint xs: 360px and bigger */
@container bg (width >= 360px) {
  .card {
    --space: 7cqw;
    --card-radius: 7cqw;
  }
  .title-group {
    gap: 0.4em;
  }
  .card-title-lg {
    font-size: 8cqw;
  }
  .card-subtitle {
    font-size: var(--text-sm);
  }
}
/* breakpoint sm: 560px and bigger */
@container bg (width >= 560px) {
  .card {
    --space: 6cqw;
    --card-radius: 6cqw;
  }
  .card-title-lg {
    font-size: 7cqw;
  }
}
/* breakpoint md: 768px and bigger */
@container bg (width >= 768px) {
  .card {
    --space: 5cqw;
    --card-radius: 5cqw;
  }
  .title-group {
    gap: 0.75em;
  }
  .card-title-lg {
    font-size: 6cqw;
  }
  .card-subtitle {
    font-size: var(--text-md);
  }
}
/* breakpoint lg: 1024px and bigger */
@container bg (width >= 1024px) {
  .card {
    --space: 4cqw;
    --card-radius: 4cqw;
  }
  .card-title-lg {
    font-size: 5cqw;
  }
}
/* breakpoint xl: 1440px and bigger */
@container bg (width >= 1440px) {
  .card {
    --space: 3.5cqw;
    --card-radius: 3.5cqw;
  }
  .title-group {
    gap: 0.5rem;
  }
  .card-title-lg {
    font-size: min(4cqw, 70px);
  }
}
/* Remove border-radius at 100vw or bigger */
/* the -16px prevents issues with scrollbar cutting into 100vw */
@container bg (width >= calc(100vw - 16px)) {
  .card,
  .card-fit-tight,
  .card-fit-roomy {
    --card-radius: 0;
  }
}
/* ================================================== */
/* Dropdown */
/* ================================================== */
.dropdown-group {
  position: relative;
  pointer-events: none;
  z-index: 11;
}

.dropdown-toggle {
  pointer-events: auto;
}
.dropdown-toggle > .svg-ham {
  display: none;
}
.dropdown-toggle > .svg-x {
  display: inline-block;
}
.dropdown-toggle.is-closed > .svg-ham {
  display: inline-block;
}
.dropdown-toggle.is-closed > .svg-x {
  display: none;
}

.dropdown {
  --top-offset: calc(var(--nav-item-h) + var(--nav-padding));
  --dropdown-h: 0px; /* height value set via dropdown.js */
  position: absolute;
  z-index: 11;
  min-width: 140px;
  width: fit-content;
  height: fit-content;
  top: var(--top-offset);
  right: 0;
  display: grid;
  gap: var(--2xs);
  pointer-events: auto;
  border-radius: var(--sm);
  opacity: 1;
  transform: translateX(0);
  transition: opacity 200ms cubic-bezier(0.46, 0.43, 0.1, 0.99), transform 400ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
.dropdown.is-closed {
  opacity: 0;
  transform: translateY(calc(var(--dropdown-h) * 1.25));
}

.dropdown-item {
  z-index: 12;
  min-width: max-content;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  pointer-events: auto;
  cursor: pointer;
}

/* ================================================== */
/* Forms | Text inputs */
/* ================================================== */
body {
  --text-input-height: var(--ui-h-lg);
  --text-input-maxwidth: 380px;
  --text-input-padding: var(--3xs);
  --text-input-radius: 12px;
  --text-input-inset: var(--inset-md);
  --text-input-inset-bg: var(--inset-bg-xdeep);
  --textarea-maxwidth: 500px;
  --textarea-minheight: 150px;
  --placeholder-color: var(--text-mild);
  --caret-color: hsl(var(--primary-70) / 1);
}

/* Caret styling */
/* ================================================== */
input,
textarea,
[contenteditable] {
  caret-color: var(--caret-color);
}

/* Text styling */
/* ================================================== */
.text-input-group {
  height: fit-content;
  width: 100%;
  display: grid;
}
.text-input-group > .text-input-label {
  padding-bottom: var(--4xs);
}
.text-input-group > .input-hint {
  padding-top: var(--5xs);
}

.text-input-label {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  text-align: start;
  letter-spacing: 0.01em;
  font-size: var(--text-md);
  line-height: calc(0.125em + 1.5ex + 0.125em);
  color: var(--text-strong);
  text-shadow: var(--text-sha-sm);
}

.input-hint {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-xs);
  line-height: calc(0.125em + 2.25ex + 0.125em);
  color: var(--text-mild);
  text-shadow: var(--text-sha-3xs);
}

/* Input base mixins */
/* ================================================== */
/* Search input */
/* ================================================== */
.search-input-bg {
  pointer-events: none;
  position: relative;
  z-index: 13;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: var(--text-input-padding);
  background-color: var(--text-input-inset-bg);
  box-shadow: var(--text-input-inset);
  border-radius: var(--text-input-radius);
  overflow: hidden;
  height: var(--text-input-height);
  width: min(var(--text-input-maxwidth), 100%);
  padding: 0 var(--text-input-padding);
  --search-icon-h: calc(var(--text-input-height) - (var(--text-input-padding) * 2));
  --wrap-icon: calc(var(--search-icon-h) + (var(--text-input-padding) * 2));
}

.search-input-icon {
  z-index: 15;
  height: var(--search-icon-h);
  width: var(--search-icon-h);
  aspect-ratio: 1;
  background-color: var(--placeholder-color);
}

.search-input {
  position: absolute;
  inset: 0;
  z-index: 14;
  width: 100%;
  height: 100%;
  background-color: transparent;
  border-radius: var(--text-input-radius);
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  z-index: 15;
  line-height: 1;
  text-align: start;
  color: var(--text-base);
  pointer-events: auto;
  padding-left: var(--wrap-icon);
  padding-right: var(--text-input-padding);
}
.search-input::placeholder {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  z-index: 15;
  line-height: 1;
  text-align: start;
  color: var(--text-base);
  color: var(--placeholder-color);
}
.search-input:focus-visible {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}

/* Little x that lets you clear what you typed. Not always available */
input[type=search]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  z-index: 15;
  height: calc(var(--text-input-height) - var(--text-input-padding) * 2);
  aspect-ratio: 1;
  /*background: url(/assets/icons/XCircleOutline.svg) no-repeat 50% 50%;*/
  background-size: contain;
  opacity: 0;
  pointer-events: none;
}

input[type=search]:focus::-webkit-search-cancel-button {
  opacity: 0.33;
  pointer-events: all;
}

/* Text input */
/* ================================================== */
.text-input-bg {
  pointer-events: none;
  position: relative;
  z-index: 13;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: var(--text-input-padding);
  background-color: var(--text-input-inset-bg);
  box-shadow: var(--text-input-inset);
  border-radius: var(--text-input-radius);
  overflow: hidden;
  height: var(--text-input-height);
  width: min(var(--text-input-maxwidth), 100%);
}

.text-input {
  position: absolute;
  inset: 0;
  z-index: 14;
  width: 100%;
  height: 100%;
  background-color: transparent;
  border-radius: var(--text-input-radius);
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  z-index: 15;
  line-height: 1;
  text-align: start;
  color: var(--text-base);
  pointer-events: auto;
  padding: 0 var(--text-input-padding);
}
.text-input::placeholder {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  z-index: 15;
  line-height: 1;
  text-align: start;
  color: var(--text-base);
  color: var(--placeholder-color);
}
.text-input:focus-visible {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}

/* Textarea input */
/* ================================================== */
.textarea-bg {
  pointer-events: none;
  position: relative;
  z-index: 13;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: var(--text-input-padding);
  background-color: var(--text-input-inset-bg);
  box-shadow: var(--text-input-inset);
  border-radius: var(--text-input-radius);
  overflow: hidden;
  width: min(var(--textarea-maxwidth), 100%);
  min-height: var(--textarea-minheight);
  height: fit-content;
}

.textarea {
  position: absolute;
  inset: 0;
  z-index: 14;
  width: 100%;
  height: 100%;
  background-color: transparent;
  border-radius: var(--text-input-radius);
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  z-index: 15;
  line-height: 1;
  text-align: start;
  color: var(--text-base);
  pointer-events: auto;
  padding: var(--text-input-padding);
  white-space: pre-wrap;
  overflow: auto;
  resize: none;
  line-height: calc(0.125em + 2.5ex + 0.125em);
}
.textarea::placeholder {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-sm);
  z-index: 15;
  line-height: 1;
  text-align: start;
  color: var(--text-base);
  color: var(--placeholder-color);
}
.textarea:focus-visible {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}

/* ================================================== */
/* Inputs */
/* ================================================== */
/* Base for switch | checkbox | radio button  ‚ú® Config these values */
/* ================================================== */
/* Checkbox */
/* ================================================== */
input[type=checkbox].checkbox {
  --input-h: var(--ui-h-xs);
  --bg: var(--inset-bg-deep);
  --bg-hover: var(--tint-2xdark);
  --inset: var(--inset-sm);
  --knob: hsl(var(--neutral-95) / 1);
  --knob-sha: var(--sha-xs);
  --bg-checked: hsl(var(--primary-50) / 1);
  --bg-checked-hover: hsl(var(--primary-30) / 1);
  --bg-disabled: var(--inset-bg-xdeep);
  --inset-disabled: none;
  --knob-disabled: hsl(var(--neutral-90) / 0.25);
  --knob-disabled-sha: none;
  --bg-disabled-checked: hsl(var(--primary-70) / 0.4);
  position: relative;
  z-index: 14;
  overflow: hidden;
  pointer-events: auto;
  cursor: pointer;
  background-color: var(--bg);
  box-shadow: var(--inset);
  will-change: background-color;
  transition: background-color 400ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  width: var(--input-h);
  height: var(--input-h);
  border-radius: 0.5rem;
}
input[type=checkbox].checkbox::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 15;
  overflow: hidden;
}
@media (pointer: fine) {
  input[type=checkbox].checkbox:hover {
    background-color: var(--bg-hover);
  }
}
input[type=checkbox].checkbox:checked {
  background-color: var(--bg-checked);
}
input[type=checkbox].checkbox:checked:hover {
  background-color: var(--bg-checked-hover);
}
input[type=checkbox].checkbox:focus-visible {
  box-shadow: 0 0 0 1px hsl(var(--primary-98)/0.4), 0 0 0 2px hsl(var(--primary-90)/0.3), 0 0 0 3px hsl(var(--primary-5)/0.2) !important;
}
input[type=checkbox].checkbox:disabled {
  cursor: not-allowed;
  background-color: var(--bg-disabled);
  box-shadow: var(--inset-disabled);
}
input[type=checkbox].checkbox:disabled + label {
  color: var(--text-xmild);
}
input[type=checkbox].checkbox:disabled::after {
  box-shadow: var(--knob-disabled-sha);
}
input[type=checkbox].checkbox:disabled:checked {
  background-color: var(--bg-disabled-checked);
}
input[type=checkbox].checkbox:disabled:checked::after {
  box-shadow: var(--knob-disabled-sha);
}
input[type=checkbox].checkbox::after {
  background-color: transparent;
  box-shadow: none;
}
input[type=checkbox].checkbox:checked::after {
  border-radius: 0.05rem;
  width: 55%;
  height: 30%;
  border: 2.5px solid var(--knob);
  border-top: 0;
  border-right: 0;
  left: 23%;
  top: 32%;
  transform: rotate(-45deg);
}
input[type=checkbox].checkbox:disabled::after {
  border-radius: 0.05rem;
  width: 80%;
  height: 30%;
  border-bottom: 2px solid var(--knob-disabled);
  border-top: 0;
  border-right: 0;
  border-left: 0;
  left: 0%;
  top: 30%;
  transform: rotate(-45deg);
}
input[type=checkbox].checkbox:disabled:checked::after {
  width: 55%;
  height: 32%;
  border: 2.5px solid var(--knob-disabled);
  border-top: 0;
  border-right: 0;
  left: 23%;
  top: 30%;
}

/* Switch */
/* ================================================== */
input[type=checkbox].switch {
  --switch-width: calc(var(--input-h) * 1.8);
  --thumb-margin: 3.5px;
  --input-h: var(--ui-h-xs);
  --bg: var(--inset-bg-deep);
  --bg-hover: var(--tint-2xdark);
  --inset: var(--inset-sm);
  --knob: hsl(var(--neutral-95) / 1);
  --knob-sha: var(--sha-xs);
  --bg-checked: hsl(var(--primary-50) / 1);
  --bg-checked-hover: hsl(var(--primary-30) / 1);
  --bg-disabled: var(--inset-bg-xdeep);
  --inset-disabled: none;
  --knob-disabled: hsl(var(--neutral-90) / 0.25);
  --knob-disabled-sha: none;
  --bg-disabled-checked: hsl(var(--primary-70) / 0.4);
  position: relative;
  z-index: 14;
  overflow: hidden;
  pointer-events: auto;
  cursor: pointer;
  background-color: var(--bg);
  box-shadow: var(--inset);
  will-change: background-color;
  transition: background-color 400ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  display: inline-flex;
  width: var(--switch-width);
  height: var(--input-h);
  align-items: center;
  border-radius: 99px;
}
input[type=checkbox].switch::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 15;
  overflow: hidden;
}
@media (pointer: fine) {
  input[type=checkbox].switch:hover {
    background-color: var(--bg-hover);
  }
}
input[type=checkbox].switch:checked {
  background-color: var(--bg-checked);
}
input[type=checkbox].switch:checked:hover {
  background-color: var(--bg-checked-hover);
}
input[type=checkbox].switch:focus-visible {
  box-shadow: 0 0 0 1px hsl(var(--primary-98)/0.4), 0 0 0 2px hsl(var(--primary-90)/0.3), 0 0 0 3px hsl(var(--primary-5)/0.2) !important;
}
input[type=checkbox].switch:disabled {
  cursor: not-allowed;
  background-color: var(--bg-disabled);
  box-shadow: var(--inset-disabled);
}
input[type=checkbox].switch:disabled + label {
  color: var(--text-xmild);
}
input[type=checkbox].switch:disabled::after {
  box-shadow: var(--knob-disabled-sha);
}
input[type=checkbox].switch:disabled:checked {
  background-color: var(--bg-disabled-checked);
}
input[type=checkbox].switch:disabled:checked::after {
  box-shadow: var(--knob-disabled-sha);
}
input[type=checkbox].switch::after {
  display: block;
  aspect-ratio: 1;
  margin: var(--thumb-margin);
  height: calc(100% - 2 * var(--thumb-margin));
  background-color: var(--knob);
  box-shadow: var(--knob-sha);
  border-radius: 99px;
  transition: margin 300ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
}
input[type=checkbox].switch:checked::after {
  margin-inline-start: calc(var(--switch-width) - var(--input-h) + var(--thumb-margin));
}
input[type=checkbox].switch:disabled::after {
  background-color: var(--knob-disabled);
}

/* Radio button */
/* ================================================== */
input[type=radio] {
  --input-h: var(--ui-h-xs);
  --bg: var(--inset-bg-deep);
  --bg-hover: var(--tint-2xdark);
  --inset: var(--inset-sm);
  --knob: hsl(var(--neutral-95) / 1);
  --knob-sha: var(--sha-xs);
  --bg-checked: hsl(var(--primary-50) / 1);
  --bg-checked-hover: hsl(var(--primary-30) / 1);
  --bg-disabled: var(--inset-bg-xdeep);
  --inset-disabled: none;
  --knob-disabled: hsl(var(--neutral-90) / 0.25);
  --knob-disabled-sha: none;
  --bg-disabled-checked: hsl(var(--primary-70) / 0.4);
  position: relative;
  z-index: 14;
  overflow: hidden;
  pointer-events: auto;
  cursor: pointer;
  background-color: var(--bg);
  box-shadow: var(--inset);
  will-change: background-color;
  transition: background-color 400ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  width: var(--input-h);
  height: var(--input-h);
  aspect-ratio: 1;
  border-radius: 99px;
}
input[type=radio]::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 15;
  overflow: hidden;
}
@media (pointer: fine) {
  input[type=radio]:hover {
    background-color: var(--bg-hover);
  }
}
input[type=radio]:checked {
  background-color: var(--bg-checked);
}
input[type=radio]:checked:hover {
  background-color: var(--bg-checked-hover);
}
input[type=radio]:focus-visible {
  box-shadow: 0 0 0 1px hsl(var(--primary-98)/0.4), 0 0 0 2px hsl(var(--primary-90)/0.3), 0 0 0 3px hsl(var(--primary-5)/0.2) !important;
}
input[type=radio]:disabled {
  cursor: not-allowed;
  background-color: var(--bg-disabled);
  box-shadow: var(--inset-disabled);
}
input[type=radio]:disabled + label {
  color: var(--text-xmild);
}
input[type=radio]:disabled::after {
  box-shadow: var(--knob-disabled-sha);
}
input[type=radio]:disabled:checked {
  background-color: var(--bg-disabled-checked);
}
input[type=radio]:disabled:checked::after {
  box-shadow: var(--knob-disabled-sha);
}
input[type=radio]::after {
  background-color: transparent;
  box-shadow: none;
}
input[type=radio]:checked::after {
  margin: 5px;
  aspect-ratio: 1;
  border-radius: 99px;
  background-color: var(--knob);
  box-shadow: var(--knob-sha);
}
input[type=radio]:disabled:checked::after {
  background-color: var(--knob-disabled);
}

/* Input wappers & items */
/* ================================================== */
.input-legend {
  padding-bottom: var(--md);
  font-size: var(--text-md);
}

.input-fieldset {
  display: grid;
  gap: var(--sm);
}

.input-group {
  display: flex;
  align-items: center;
  gap: var(--xs);
}

.input-label {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.02em;
  color: var(--text-xstrong);
  text-shadow: var(--text-sha-sm);
}

.inline-label {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  color: var(--text-strong);
}

/* ================================================== */
/* Nav */
/* ================================================== */
html {
  --nav-padding: var(--xs);
  --nav-item-h: var(--ui-h-md);
  --nav-h: calc(var(--nav-item-h) + (var(--nav-padding) * 2));
}

.main-nav-bin {
  position: fixed;
  z-index: 9;
  height: var(--nav-h);
  inset: 0;
  padding: var(--nav-padding);
  pointer-events: none;
}

.main-nav {
  max-width: 90rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--3xs);
  margin: 0 auto;
  pointer-events: none;
}

.nav-item {
  z-index: 10;
  height: var(--nav-item-h);
  display: grid;
  place-items: center;
}
.nav-item > svg {
  width: calc(var(--nav-item-h) * 0.8);
  height: calc(var(--nav-item-h) * 0.8);
}

/* ================================================== */
/* Tab menu */
/* ================================================== */
.tab-panel {
  position: relative;
  width: 100%;
  max-height: 100%;
  aspect-ratio: 1;
  overflow: hidden;
}

.panel-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.tab-menu-bin {
  --tab-menu-space: 4px;
  --tab-radius: 8px;
  pointer-events: none;
  overflow: hidden;
  position: relative;
  z-index: 9;
  width: fit-content;
  height: var(--ui-h-md);
  border-radius: calc(var(--tab-radius) + var(--tab-menu-space) - (var(--tab-radius) + var(--tab-menu-space)) * 3 / 100);
}
@media only screen and (min-width: 64rem) {
  .tab-menu-bin {
    --tab-radius: 9px;
  }
}

.tab-menu {
  pointer-events: none;
  width: fit-content;
  height: 100%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  gap: var(--tab-menu-space);
  padding: var(--tab-menu-space);
  border-radius: inherit;
  background-color: var(--inset-bg-deep);
  box-shadow: var(--inset-md);
  -webkit-backdrop-filter: blur(10px) brightness(0.95) saturate(1.5);
  backdrop-filter: blur(10px) brightness(0.95) saturate(1.5);
}

[role=tab] {
  --_btn-h: var(--btn-h, 2.25rem);
  --_btn-content-h: var(--btn-content-h, 1rem);
  --_btn-padding-x: var(--btn-padding-x, 1.5rem);
  --_btn-padding-top: var(--btn-padding-top, 0);
  --_btn-padding-bottom: var(--btn-padding-bottom, 0);
  --_btn-gap: var(--btn-gap, 0.25rem);
  --_btn-radius: var(--btn-radius, 999px);
  position: relative;
  z-index: 17;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: var(--_btn-h);
  padding-top: 0; /* added to .btn-text so svg is not affected */
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0; /* added to .btn-text so svg is not affected */
  padding-left: var(--_btn-padding-x);
  gap: var(--_btn-gap);
  border-radius: var(--_btn-radius);
  pointer-events: auto;
  cursor: pointer;
  --btn-h: 100%;
  --btn-content-h: 0.9rem;
  --btn-padding-x: 0.75rem;
  --btn-padding-top: 0;
  --btn-padding-bottom: 0;
  --btn-radius: var(--tab-radius);
}
[role=tab]::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 18;
}
[role=tab]::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 16;
}
[role=tab] > .btn-text {
  pointer-events: none;
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  text-shadow: var(--text-sha-sm);
  z-index: 19;
  font-size: var(--_btn-content-h);
  line-height: var(--_btn-content-h);
  padding-top: var(--_btn-padding-top);
  padding-bottom: var(--_btn-padding-bottom);
  pointer-events: none;
}
[role=tab] > svg {
  z-index: 19;
  height: calc(var(--_btn-content-h) * 1.15);
  aspect-ratio: 1;
  pointer-events: none;
}
[role=tab].icon-end {
  padding-top: 0;
  padding-right: calc(var(--_btn-padding-x) * 0.8);
  padding-bottom: 0;
  padding-left: var(--_btn-padding-x);
}
[role=tab].icon-start {
  padding-top: 0;
  padding-right: var(--_btn-padding-x);
  padding-bottom: 0;
  padding-left: calc(var(--_btn-padding-x) * 0.8);
}
@media only screen and (min-width: 22.5rem) {
  [role=tab] {
    --btn-content-h: 1rem;
    --btn-padding-x: 1rem;
  }
}
@media only screen and (min-width: 35rem) {
  [role=tab] {
    --btn-padding-x: 1.15rem;
  }
}
@media only screen and (min-width: 48rem) {
  [role=tab] {
    --btn-padding-x: 1.25rem;
  }
}
@media only screen and (min-width: 64rem) {
  [role=tab] {
    --btn-content-h: 1.1rem;
    --btn-padding-x: 1.5rem;
  }
}

[role=tab][aria-selected=true] {
  --btn-text: var(--tint-3xdark);
}
[role=tab][aria-selected=true]::before {
  opacity: 0.6;
}

/* Pages */
/* ================================================== */
/* Used on all pages */
/* ================================================== */
html {
  width: 100%;
  height: fit-content;
  overflow-x: hidden;
  overflow-y: scroll;
  scroll-behavior: smooth;
  scroll-padding-top: var(--nav-h);
  scrollbar-gutter: stable;
  overscroll-behavior: contain;
}

body {
  position: relative;
  width: 100%;
  min-height: 100lvh;
  height: fit-content;
}

.page-area {
  position: relative;
  z-index: 1;
  width: 100%;
  height: fit-content;
}

.content-area {
  width: 100%;
  height: fit-content;
  padding: 0 0 var(--5xl) 0;
  /* for debug */
}

/* Above-the-fold hero header */
/* ================================================== */
.hero {
  width: 100%;
  height: 100vh;
  min-height: 100lvh;
}

/* ================================================== */
/* Demo only styles */
/* ================================================== */
/* Fixed background panel */
/* ================================================== */
/* Controled by nav's tab menu */
.page-bg-panel-group {
  pointer-events: none;
  position: fixed;
  inset: 0;
  z-index: -10;
  width: 100%;
  height: 100vh;
  min-height: 100lvh;
}

.page-bg-panel {
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  min-height: 100lvh;
  overflow: hidden;
}

.page-bg-img {
  width: 100%;
  height: 100%;
  min-height: 100lvh;
  object-fit: cover;
  object-position: center;
}

.page-bg-noise {
  pointer-events: none;
}
.page-bg-noise::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  background-size: 40px;
  background-repeat: repeat;
}

.page-bg-blur {
  pointer-events: none;
}
.page-bg-blur::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  -webkit-backdrop-filter: blur(3px) brightness(1) saturate(1.2);
  backdrop-filter: blur(3px) brightness(1) saturate(1.2);
}

/*  Main nav glass logo */
/* ================================================== */
/*.svg-3d-glass-ui-logo {*/
/*  mask: url(/assets/logos/3D-glass-UI-logo.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*  -webkit-backdrop-filter: blur(10px) brightness(0.8) saturate(2.5);*/
/*  backdrop-filter: blur(10px) brightness(0.8) saturate(2.5);*/
/*}*/

/*.svg-logo {*/
/*  mask: url(/assets/logos/3D-glass-UI-logo.svg);*/
/*  max-width: 100%;*/
/*  max-height: 100%;*/
/*  aspect-ratio: 1;*/
/*  mask-repeat: no-repeat;*/
/*  mask-size: cover;*/
/*  mask-position: center;*/
/*}*/

/*  Hero header */
/* ================================================== */
.card-3d-layout {
  pointer-events: none;
  position: relative;
  width: 100%;
  height: 100%;
  display: grid;
  place-self: center;
  place-items: end center;
  padding: var(--nav-h) 0 15% 0;
  perspective: 2500px;
}
@media only screen and (min-width: 22.5rem) {
  .card-3d-layout {
    padding-bottom: 25%;
  }
}
@media only screen and (min-width: 35rem) {
  .card-3d-layout {
    place-items: end start;
    padding-left: var(--moat);
    padding-right: 0;
    padding-bottom: 10%;
  }
}
@media only screen and (min-width: 64rem) {
  .card-3d-layout {
    padding-left: 5rem;
    max-width: 64rem;
  }
}
@media only screen and (min-width: 90rem) {
  .card-3d-layout {
    padding-left: 0;
    padding-bottom: 5%;
    max-width: 1200px;
  }
}
@media only screen and (min-width: 1700px) {
  .card-3d-layout {
    max-width: 90rem;
  }
}
@media only screen and (min-width: 2500px) {
  .card-3d-layout {
    perspective: 3000px;
    max-width: 2000px;
  }
}

.card-3d {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);
  --_card-radius: var(--card-radius, 1.5rem);
  z-index: 7;
  position: relative;
  height: fit-content;
  display: grid;
  gap: var(--_space);
  padding: var(--_space);
  overflow: hidden;
  pointer-events: auto;
  border-radius: var(--_card-radius);
  pointer-events: none;
  --space: calc(var(--sm) * 1.1);
  width: min(95%, 340px);
  border-radius: calc(var(--lg) * 1.15);
  box-shadow: var(--sha-lg);
  padding: var(--space);
  backface-visibility: hidden;
  will-change: transform;
  transition: transform 400ms cubic-bezier(0.46, 0.43, 0.1, 0.99);
  transform: perspective(1500px) rotateY(30deg) rotateX(15deg) rotateZ(-4deg) translateX(10px) translateY(0px);
}
@media only screen and (min-width: 22.5rem) {
  .card-3d {
    --space: var(--md);
    width: min(95%, 380px);
    transform: perspective(1800px) rotateY(30deg) rotateX(20deg) rotateZ(-6deg) translateX(15px) translateY(0px);
  }
}
@media only screen and (min-width: 35rem) {
  .card-3d {
    width: 390px;
    transform: perspective(2500px) rotateY(25deg) rotateX(20deg) rotateZ(-10deg) translateX(35px) translateY(-10%);
  }
}
@media only screen and (min-width: 48rem) {
  .card-3d {
    width: 420px;
    --space: var(--md);
  }
}
@media only screen and (min-width: 64rem) {
  .card-3d {
    width: 450px;
    --space: var(--md);
    border-radius: var(--lg);
  }
}
@media (hover: hover) {
  .card-3d {
    pointer-events: auto;
  }
  .card-3d:hover {
    transform: perspective(1000px) rotateY(0deg) rotateX(0deg) rotateZ(0deg) translateX(0px) translateY(0%);
  }
}

.card-3d-title {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.02em;
  text-shadow: var(--text-sha-2xl);
  line-height: 1.15;
  color: var(--text-strong);
  font-size: var(--text-xl);
}
@media only screen and (min-width: 22.5rem) {
  .card-3d-title {
    font-size: calc(var(--text-2xl) * 0.95);
  }
}
@media only screen and (min-width: 48rem) {
  .card-3d-title {
    font-size: var(--text-2xl);
  }
}

.card-3d-text {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100, "YTLC" 500;
  font-size: var(--text-xs);
  letter-spacing: 0.02em;
  text-shadow: var(--text-sha-2xs);
}
@media only screen and (min-width: 22.5rem) {
  .card-3d-text {
    font-size: var(--text-md);
  }
}
@media only screen and (min-width: 35rem) {
  .card-3d-text {
    font-size: var(--text-md);
  }
}
@media only screen and (min-width: 64rem) {
  .card-3d-text {
    font-size: calc(var(--text-md) * 1.1);
  }
}

/* Menu link marquee */
/* ================================================== */
.marquee-bin {
  width: 100%;
  height: fit-content;
  display: flex;
  justify-content: flex-start;
}

.marquee {
  width: fit-content;
  min-width: 50%;
  display: flex;
  justify-content: flex-end;
  padding: var(--sm);
  margin-bottom: var(--3xl);
  background-color: var(--tint-clear);
  border-radius: 0 var(--sm) var(--sm) 0;
  box-shadow: var(--sha-sm);
  position: relative;
  z-index: 4;
}
.marquee::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--flat-bevel-md);
}
.marquee::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.marquee > * {
  position: relative;
  z-index: 6;
}
@media only screen and (min-width: 22.5rem) {
  .marquee {
    min-width: 40%;
  }
}
@media only screen and (min-width: 35rem) {
  .marquee {
    min-width: 33%;
  }
}

.marquee-title {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: calc(0.125em + 1.5ex + 0.125em);
  font-size: var(--text-xl);
  letter-spacing: 0.02em;
  text-align: end;
  color: var(--text-strong);
  text-shadow: var(--text-sha-2xl);
}

/* Glass bevel Demo */
/* ================================================== */
.glass-bevel-xs {
  position: relative;
  z-index: 4;
}
.glass-bevel-xs::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-xs);
}
.glass-bevel-xs::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-bevel-xs > * {
  position: relative;
  z-index: 6;
}

.glass-bevel-sm {
  position: relative;
  z-index: 4;
}
.glass-bevel-sm::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-sm);
}
.glass-bevel-sm::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-bevel-sm > * {
  position: relative;
  z-index: 6;
}

.glass-bevel-md {
  position: relative;
  z-index: 4;
}
.glass-bevel-md::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-md);
}
.glass-bevel-md::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-bevel-md > * {
  position: relative;
  z-index: 6;
}

.glass-bevel-lg {
  position: relative;
  z-index: 4;
}
.glass-bevel-lg::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-lg);
}
.glass-bevel-lg::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-bevel-lg > * {
  position: relative;
  z-index: 6;
}

.glass-bevel-xl {
  position: relative;
  z-index: 4;
}
.glass-bevel-xl::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 5;
  box-shadow: var(--bevel-xl);
}
.glass-bevel-xl::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  z-index: 3;
  background-repeat: repeat;
  background-size: 40px;
    /*background-image: url(/assets/textures/noise-texture-rough-gray-500x500.png);*/

  -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
}
.glass-bevel-xl > * {
  position: relative;
  z-index: 6;
}

/* Telescope rect */
.tele-rect-bin {
  height: 450px;
}
@media only screen and (min-width: 22.5rem) {
  .tele-rect-bin {
    height: 550px;
  }
}

.tele-rect {
  display: grid;
  touch-action: pan-y;
  min-width: fit-content;
  width: 100%;
  overflow: hidden;
  padding: 8% 12% 4% 4%;
  background-color: var(--tint-xdark);
  will-change: padding;
  transition: padding cubic-bezier(0.46, 0.43, 0.1, 0.99) 150ms;
}
@media (hover: hover) {
  .tele-rect:hover {
    padding: 8%;
  }
}
.tele-rect > p {
  padding: var(--2xs);
  pointer-events: none;
}

/* Glass inset Demo */
/* ================================================== */
.inset-demo {
  width: 100%;
  height: fit-content;
  border-radius: inherit;
  background-color: var(--inset-bg-xdeep);
  padding: var(--2xs);
}
@media only screen and (min-width: 35rem) {
  .inset-demo {
    padding: var(--xs);
  }
}

/*  glass tint demo */
/* ================================================== */
.glass-bento-2to3 {
  display: grid;
  place-content: center;
  grid-template-columns: repeat(2, minmax(100px, 1fr));
  gap: var(--md);
}
@media only screen and (min-width: 22.5rem) {
  .glass-bento-2to3 {
    grid-template-columns: repeat(3, minmax(100px, 180px));
    gap: var(--3xs);
  }
}
@media only screen and (min-width: 35rem) {
  .glass-bento-2to3 {
    gap: var(--2xs);
  }
}
@media only screen and (min-width: 48rem) {
  .glass-bento-2to3 {
    gap: var(--xs);
  }
}
@media only screen and (min-width: 64rem) {
  .glass-bento-2to3 {
    grid-template-columns: repeat(3, minmax(100px, 200px));
    gap: var(--sm);
  }
}

/* Button Demo */
/* ================================================== */
.btn-demo-bin {
  width: 100%;
  max-width: 64rem;
  display: grid;
  place-items: center;
  padding: var(--lg) var(--3xl);
}
@media only screen and (min-width: 35rem) {
  .btn-demo-bin {
    padding: var(--lg) 0;
  }
}
@media only screen and (min-width: 64rem) {
  .btn-demo-bin {
    padding: var(--lg);
  }
}

.btn-layout {
  width: 200px;
  display: grid;
  row-gap: var(--5xl);
  column-gap: var(--3xl);
}
@media only screen and (min-width: 35rem) {
  .btn-layout {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-evenly;
  }
}
@media only screen and (min-width: 48rem) {
  .btn-layout {
    column-gap: var(--5xl);
  }
}

.btn-col {
  display: grid;
  gap: var(--md);
  width: 100%;
  place-items: center start;
}
@media only screen and (min-width: 22.5rem) {
  .btn-col {
    width: fit-content;
  }
}

.btn-col-c {
  display: grid;
  gap: var(--md);
  width: 100%;
  place-items: center start;
}
@media only screen and (min-width: 22.5rem) {
  .btn-col-c {
    place-items: center;
    width: fit-content;
  }
}

.btn-cell-label {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 600;
  font-size: var(--text-xs);
  letter-spacing: min(1vw, 10px);
  text-transform: uppercase;
  line-height: calc(0.125em + 2.25ex + 0.125em);
  color: var(--text-base);
  text-shadow: var(--text-sha-lg);
  margin-bottom: -10px;
  width: 100%;
}
@media only screen and (min-width: 35rem) {
  .btn-cell-label {
    width: fit-content;
  }
}
@media only screen and (min-width: 64rem) {
  .btn-cell-label {
    font-size: var(--text-sm);
  }
}

/* Fake btn states */
.btn-hover {
  pointer-events: none;
}
.btn-hover > .btn-text {
  color: var(--btn-state-text);
}
.btn-hover > svg {
  background-color: var(--btn-state-icon);
}
.btn-hover::before {
  opacity: var(--btn-hover);
}

.btn-focus {
  pointer-events: none;
}
.btn-focus > .btn-text {
  color: var(--btn-state-text);
}
.btn-focus > svg {
  background-color: var(--btn-state-icon);
}
.btn-focus::before {
  opacity: var(--btn-focus);
}
.btn-focus::after {
  box-shadow: inset 0 0 0 1px hsl(var(--primary-98)/0.5), inset 0 0 0 1.5px hsl(var(--primary-95)/0.4), inset 0 0 0 2px hsl(var(--primary-5)/0.2) !important;
}

.btn-active {
  pointer-events: none;
}
.btn-active > .btn-text {
  color: var(--btn-state-text);
}
.btn-active > svg {
  background-color: var(--btn-state-icon);
}
.btn-active::before {
  opacity: var(--btn-active);
}

/* Contact section */
/* ================================================== */
.contact-inset {
  display: grid;
  place-items: center;
  gap: var(--2xs);
  width: 100%;
  height: fit-content;
  padding: var(--lg);
  box-shadow: var(--inset-lg);
  border-radius: inherit;
  background-color: var(--inset-bg-deep);
}

.stamp {
  width: 100px;
  aspect-ratio: 1/1;
  overflow: hidden;
  border-radius: var(--xs);
  opacity: 0.9;
  box-shadow: var(--sha-md);
}
@media only screen and (min-width: 22.5rem) {
  .stamp {
    width: 150px;
    border-radius: var(--sm);
  }
}
@media only screen and (min-width: 35rem) {
  .stamp {
    width: 180px;
  }
}
.stamp > img {
  width: 100%;
}

/* Demo text styles */
/* ================================================== */
.class-name {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 300;
  letter-spacing: 0.04em;
  text-shadow: var(--text-sha-sm);
  word-break: keep-all;
  font-size: var(--text-sm);
}
@media only screen and (min-width: 35rem) {
  .class-name {
    font-size: var(--text-md);
  }
}

.code-label-md {
  font-family: "Brandon", "Arial", sans-serif;
  font-weight: 500;
  letter-spacing: 0.01em;
  font-size: var(--text-sm);
  line-height: calc(0.125em + 2.25ex + 0.125em);
  font-family: "Brandon", "Courier", monospace;
  text-shadow: var(--text-sha-2xs);
}
@media only screen and (min-width: 35rem) {
  .code-label-md {
    font-family: "Brandon", "Arial", sans-serif;
    font-weight: 500;
    letter-spacing: 0.01em;
    font-size: var(--text-md);
    line-height: calc(0.125em + 2.25ex + 0.125em);
  }
}

/* Code fonts */
/* ================================================== */
.c-comment {
  font-family: "Brandon", "Courier", monospace;
  font-size: inherit;
  line-height: inherit;
  font-weight: 400; /* only font-weight available for this font */
  font-style: italic;
  color: var(--text-xmild);
}

.code-class {
  font-family: "Brandon", "Courier", monospace;
  font-size: inherit;
  line-height: inherit;
  font-weight: 400; /* only font-weight available for this font */
  display: inline;
}

